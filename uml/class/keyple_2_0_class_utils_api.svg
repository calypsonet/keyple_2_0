<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2727.5px" preserveAspectRatio="none" style="width:3090px;height:2727px;" version="1.1" viewBox="0 0 3090 2727" width="3090px" zoomAndPan="magnify"><defs/><g><text fill="#000000" font-family="sans-serif" font-size="45" lengthAdjust="spacing" textLength="885" x="1086.25" y="46.7139">Keyple 2.0 - keyple-utils - 2.0.0 (22/01/2021)</text><!--MD5=[c52f45833d539af9e29a9d34b8b7302b]
cluster utils--><polygon fill="#F8F9F9" points="40,346.6016,462.5,346.6016,480,405.625,3047.5,405.625,3047.5,2711.6016,40,2711.6016,40,346.6016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="40" x2="480" y1="405.625" y2="405.625"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="407.5" x="50" y="387.9346">org.eclipse.keyple.utils</text><!--MD5=[d5b9573ae558c3cb3918aa21faca5202]
cluster bertlv--><polygon fill="#F2F3F4" points="1117.5,1636.6016,1237.5,1636.6016,1255,1695.625,2700,1695.625,2700,2631.6016,1117.5,2631.6016,1117.5,1636.6016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="1117.5" x2="1255" y1="1695.625" y2="1695.625"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="105" x="1127.5" y="1677.9346">bertlv</text><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><polygon fill="#F2F3F4" points="120,476.6016,210,476.6016,227.5,535.625,2967.5,535.625,2967.5,939.1016,120,939.1016,120,476.6016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="120" x2="227.5" y1="535.625" y2="535.625"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="75" x="130" y="517.9346">json</text><!--MD5=[52b54d1eef5d217494f95d05f6b53b88]
cluster protocols--><polygon fill="#F2F3F4" points="1002.5,1039.1016,1185,1039.1016,1202.5,1098.125,2450,1098.125,2450,1536.6016,1002.5,1536.6016,1002.5,1039.1016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="1002.5" x2="1202.5" y1="1098.125" y2="1098.125"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="167.5" x="1012.5" y="1080.4346">protocols</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="65" fill="#FEFECE" height="451.3086" id="Assert" style="stroke:#D4AC0D;stroke-width:3.75;" width="967.5" x="81.25" y="1762.8516"/><ellipse cx="464.375" cy="1802.8516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M469.375,1794.1016 Q469.8828,1792.8516 470.4688,1792.2266 Q471.0547,1791.6016 471.7188,1791.6016 Q472.8906,1791.6016 473.6328,1792.3047 Q474.375,1793.0078 474.375,1794.6484 L474.375,1798.5547 Q474.375,1800.1953 473.6719,1800.8984 Q472.9688,1801.6016 471.875,1801.6016 Q470.8984,1801.6016 470.2734,1801.1719 Q469.6484,1800.7422 469.375,1799.6094 Q469.2578,1798.8281 468.8281,1798.3984 Q468.0469,1797.5781 466.6406,1797.1094 Q465.2344,1796.6016 463.8281,1796.6016 Q462.0703,1796.6016 460.5859,1797.3047 Q459.1406,1798.0078 458.0078,1799.5703 Q456.875,1801.1328 456.875,1803.2813 L456.875,1805.5859 Q456.875,1808.1641 458.9844,1809.8828 Q461.0938,1811.6016 464.8438,1811.6016 Q467.0703,1811.6016 468.6328,1811.0938 Q469.5313,1810.8203 470.5469,1809.9219 Q471.2109,1809.4141 471.5625,1809.2578 Q471.9141,1809.1016 472.3438,1809.1016 Q473.1641,1809.1016 473.75,1809.7656 Q474.375,1810.3906 474.375,1811.2891 Q474.375,1812.1484 473.5156,1813.1641 Q472.2656,1814.6484 470.2734,1815.4688 Q467.6563,1816.6016 464.4531,1816.6016 Q460.7031,1816.6016 457.6953,1815.1172 Q455.2734,1813.9453 453.5547,1811.4063 Q451.875,1808.8672 451.875,1805.8594 L451.875,1803.125 Q451.875,1800 453.3594,1797.2656 Q454.8828,1794.5313 457.5,1793.0859 Q460.1563,1791.6016 463.125,1791.6016 Q464.9219,1791.6016 466.4844,1792.2266 Q468.0469,1792.8516 469.375,1794.1016 Z " fill="#000000"/><ellipse cx="528.125" cy="1801.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="543.125" y="1815.127">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="85" x="610.625" y="1815.127">Assert</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="83.75" x2="1046.25" y1="1842.8516" y2="1842.8516"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="83.75" x2="1046.25" y1="1862.8516" y2="1862.8516"/><ellipse cx="108.75" cy="1890.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="257.5" x="131.25" y="1901.3989">Assert getInstance ()</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="83.75" x2="1046.25" y1="1917.4414" y2="1917.4414"/><ellipse cx="108.75" cy="1944.9414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="475" x="131.25" y="1955.9888">Assert notNull (Object obj, String name)</text><ellipse cx="108.75" cy="1979.5313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="497.5" x="131.25" y="1990.5786">Assert notEmpty (String obj, String name)</text><ellipse cx="108.75" cy="2014.1211" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="705" x="131.25" y="2025.1685">Assert notEmpty (List&lt;? extends Object&gt; obj, String name)</text><ellipse cx="108.75" cy="2048.7109" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="495" x="131.25" y="2059.7583">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="108.75" cy="2083.3008" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="562.5" x="131.25" y="2094.3481">Assert isTrue (Boolean condition, String name)</text><ellipse cx="108.75" cy="2117.8906" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="797.5" x="131.25" y="2128.938">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="108.75" cy="2152.4805" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="655" x="131.25" y="2163.5278">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="108.75" cy="2187.0703" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="902.5" x="131.25" y="2198.1177">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><rect codeLine="78" fill="#FEFECE" height="362.1289" id="ByteArrayUtil" style="stroke:#D4AC0D;stroke-width:3.75;" width="665" x="155" y="1131.6016"/><ellipse cx="340.625" cy="1171.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M345.625,1162.8516 Q346.1328,1161.6016 346.7188,1160.9766 Q347.3047,1160.3516 347.9688,1160.3516 Q349.1406,1160.3516 349.8828,1161.0547 Q350.625,1161.7578 350.625,1163.3984 L350.625,1167.3047 Q350.625,1168.9453 349.9219,1169.6484 Q349.2188,1170.3516 348.125,1170.3516 Q347.1484,1170.3516 346.5234,1169.9219 Q345.8984,1169.4922 345.625,1168.3594 Q345.5078,1167.5781 345.0781,1167.1484 Q344.2969,1166.3281 342.8906,1165.8594 Q341.4844,1165.3516 340.0781,1165.3516 Q338.3203,1165.3516 336.8359,1166.0547 Q335.3906,1166.7578 334.2578,1168.3203 Q333.125,1169.8828 333.125,1172.0313 L333.125,1174.3359 Q333.125,1176.9141 335.2344,1178.6328 Q337.3438,1180.3516 341.0938,1180.3516 Q343.3203,1180.3516 344.8828,1179.8438 Q345.7813,1179.5703 346.7969,1178.6719 Q347.4609,1178.1641 347.8125,1178.0078 Q348.1641,1177.8516 348.5938,1177.8516 Q349.4141,1177.8516 350,1178.5156 Q350.625,1179.1406 350.625,1180.0391 Q350.625,1180.8984 349.7656,1181.9141 Q348.5156,1183.3984 346.5234,1184.2188 Q343.9063,1185.3516 340.7031,1185.3516 Q336.9531,1185.3516 333.9453,1183.8672 Q331.5234,1182.6953 329.8047,1180.1563 Q328.125,1177.6172 328.125,1174.6094 L328.125,1171.875 Q328.125,1168.75 329.6094,1166.0156 Q331.1328,1163.2813 333.75,1161.8359 Q336.4063,1160.3516 339.375,1160.3516 Q341.1719,1160.3516 342.7344,1160.9766 Q344.2969,1161.6016 345.625,1162.8516 Z " fill="#000000"/><ellipse cx="404.375" cy="1170.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="419.375" y="1183.877">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="177.5" x="486.875" y="1183.877">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="157.5" x2="817.5" y1="1211.6016" y2="1211.6016"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="157.5" x2="817.5" y1="1231.6016" y2="1231.6016"/><ellipse cx="182.5" cy="1259.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="327.5" x="205" y="1270.1489">byte[] fromHex (String hex)</text><ellipse cx="182.5" cy="1293.6914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="372.5" x="205" y="1304.7388">String toHex (byte[] byteArray)</text><ellipse cx="182.5" cy="1328.2813" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="502.5" x="205" y="1339.3286">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1362.8711" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="585" x="205" y="1373.9185">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1397.4609" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="517.5" x="205" y="1408.5083">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1432.0508" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="600" x="205" y="1443.0981">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1466.6406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="505" x="205" y="1477.688">int fourBytesToInt (byte[] bytes, int offset)</text><!--MD5=[0350750bc500a3be6e05085efbe7b0b1]
class TLV--><rect codeLine="88" fill="#FEFECE" height="278.3594" id="TLV" style="stroke:#D4AC0D;stroke-width:3.75;" width="477.5" x="2161.25" y="1850.3516"/><ellipse cx="2348.125" cy="1890.3516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2353.125,1881.6016 Q2353.6328,1880.3516 2354.2188,1879.7266 Q2354.8047,1879.1016 2355.4688,1879.1016 Q2356.6406,1879.1016 2357.3828,1879.8047 Q2358.125,1880.5078 2358.125,1882.1484 L2358.125,1886.0547 Q2358.125,1887.6953 2357.4219,1888.3984 Q2356.7188,1889.1016 2355.625,1889.1016 Q2354.6484,1889.1016 2354.0234,1888.6719 Q2353.3984,1888.2422 2353.125,1887.1094 Q2353.0078,1886.3281 2352.5781,1885.8984 Q2351.7969,1885.0781 2350.3906,1884.6094 Q2348.9844,1884.1016 2347.5781,1884.1016 Q2345.8203,1884.1016 2344.3359,1884.8047 Q2342.8906,1885.5078 2341.7578,1887.0703 Q2340.625,1888.6328 2340.625,1890.7813 L2340.625,1893.0859 Q2340.625,1895.6641 2342.7344,1897.3828 Q2344.8438,1899.1016 2348.5938,1899.1016 Q2350.8203,1899.1016 2352.3828,1898.5938 Q2353.2813,1898.3203 2354.2969,1897.4219 Q2354.9609,1896.9141 2355.3125,1896.7578 Q2355.6641,1896.6016 2356.0938,1896.6016 Q2356.9141,1896.6016 2357.5,1897.2656 Q2358.125,1897.8906 2358.125,1898.7891 Q2358.125,1899.6484 2357.2656,1900.6641 Q2356.0156,1902.1484 2354.0234,1902.9688 Q2351.4063,1904.1016 2348.2031,1904.1016 Q2344.4531,1904.1016 2341.4453,1902.6172 Q2339.0234,1901.4453 2337.3047,1898.9063 Q2335.625,1896.3672 2335.625,1893.3594 L2335.625,1890.625 Q2335.625,1887.5 2337.1094,1884.7656 Q2338.6328,1882.0313 2341.25,1880.5859 Q2343.9063,1879.1016 2346.875,1879.1016 Q2348.6719,1879.1016 2350.2344,1879.7266 Q2351.7969,1880.3516 2353.125,1881.6016 Z " fill="#000000"/><ellipse cx="2411.875" cy="1889.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="55" x="2426.875" y="1902.627">TLV</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2163.75" x2="2636.25" y1="1930.3516" y2="1930.3516"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2163.75" x2="2636.25" y1="1950.3516" y2="1950.3516"/><ellipse cx="2188.75" cy="1977.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="227.5" x="2211.25" y="1988.8989">TLV (byte[] binary)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="2163.75" x2="2636.25" y1="2004.9414" y2="2004.9414"/><ellipse cx="2188.75" cy="2032.4414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="412.5" x="2211.25" y="2043.4888">boolean parse (Tag tag, int offset)</text><ellipse cx="2188.75" cy="2067.0313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="192.5" x="2211.25" y="2078.0786">int getPosition ()</text><ellipse cx="2188.75" cy="2101.6211" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="210" x="2211.25" y="2112.6685">byte[] getValue ()</text><!--MD5=[39d6d2ea03de602dbf4d534e70c872a9]
class Tag--><rect codeLine="96" fill="#FEFECE" height="485.8984" id="Tag" style="stroke:#D4AC0D;stroke-width:3.75;" width="847.5" x="1226.25" y="1746.6016"/><ellipse cx="1599.375" cy="1786.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1604.375,1777.8516 Q1604.8828,1776.6016 1605.4688,1775.9766 Q1606.0547,1775.3516 1606.7188,1775.3516 Q1607.8906,1775.3516 1608.6328,1776.0547 Q1609.375,1776.7578 1609.375,1778.3984 L1609.375,1782.3047 Q1609.375,1783.9453 1608.6719,1784.6484 Q1607.9688,1785.3516 1606.875,1785.3516 Q1605.8984,1785.3516 1605.2734,1784.9219 Q1604.6484,1784.4922 1604.375,1783.3594 Q1604.2578,1782.5781 1603.8281,1782.1484 Q1603.0469,1781.3281 1601.6406,1780.8594 Q1600.2344,1780.3516 1598.8281,1780.3516 Q1597.0703,1780.3516 1595.5859,1781.0547 Q1594.1406,1781.7578 1593.0078,1783.3203 Q1591.875,1784.8828 1591.875,1787.0313 L1591.875,1789.3359 Q1591.875,1791.9141 1593.9844,1793.6328 Q1596.0938,1795.3516 1599.8438,1795.3516 Q1602.0703,1795.3516 1603.6328,1794.8438 Q1604.5313,1794.5703 1605.5469,1793.6719 Q1606.2109,1793.1641 1606.5625,1793.0078 Q1606.9141,1792.8516 1607.3438,1792.8516 Q1608.1641,1792.8516 1608.75,1793.5156 Q1609.375,1794.1406 1609.375,1795.0391 Q1609.375,1795.8984 1608.5156,1796.9141 Q1607.2656,1798.3984 1605.2734,1799.2188 Q1602.6563,1800.3516 1599.4531,1800.3516 Q1595.7031,1800.3516 1592.6953,1798.8672 Q1590.2734,1797.6953 1588.5547,1795.1563 Q1586.875,1792.6172 1586.875,1789.6094 L1586.875,1786.875 Q1586.875,1783.75 1588.3594,1781.0156 Q1589.8828,1778.2813 1592.5,1776.8359 Q1595.1563,1775.3516 1598.125,1775.3516 Q1599.9219,1775.3516 1601.4844,1775.9766 Q1603.0469,1776.6016 1604.375,1777.8516 Z " fill="#000000"/><ellipse cx="1663.125" cy="1785.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="52.5" x="1678.125" y="1798.877">Tag</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1228.75" x2="2071.25" y1="1826.6016" y2="1826.6016"/><ellipse cx="1253.75" cy="1854.1016" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1865.1489">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="205" x="1341.25" y="1865.1489">byte UNIVERSAL</text><ellipse cx="1253.75" cy="1888.6914" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1899.7388">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="225" x="1341.25" y="1899.7388">byte APPLICATION</text><ellipse cx="1253.75" cy="1923.2813" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1934.3286">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="177.5" x="1341.25" y="1934.3286">byte CONTEXT</text><ellipse cx="1253.75" cy="1957.8711" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1968.9185">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="167.5" x="1341.25" y="1968.9185">byte PRIVATE</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1228.75" x2="2071.25" y1="1984.9609" y2="1984.9609"/><ellipse cx="1253.75" cy="2012.4609" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="782.5" x="1276.25" y="2023.5083">Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)</text><ellipse cx="1253.75" cy="2047.0508" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="345" x="1276.25" y="2058.0981">Tag (byte[] binary, int offset)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="1228.75" x2="2071.25" y1="2074.1406" y2="2074.1406"/><ellipse cx="1253.75" cy="2101.6406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="237.5" x="1276.25" y="2112.688">int getTagNumber ()</text><ellipse cx="1253.75" cy="2136.2305" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="237.5" x="1276.25" y="2147.2778">byte getTagClass ()</text><ellipse cx="1253.75" cy="2170.8203" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="282.5" x="1276.25" y="2181.8677">TagType getTagType ()</text><ellipse cx="1253.75" cy="2205.4102" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="197.5" x="1276.25" y="2216.4575">int getTagSize ()</text><!--MD5=[aafb32087e76cde11a76344dc4e614d8]
class TagType--><rect codeLine="110" fill="#FEFECE" height="189.1797" id="TagType" style="stroke:#D4AC0D;stroke-width:3.75;" width="227.5" x="1536.25" y="2381.6016"/><ellipse cx="1573.75" cy="2421.6016" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1570,2424.1016 L1570,2429.1016 L1580,2429.1016 L1580,2426.6016 L1580,2425.3906 L1581.5625,2424.1016 L1582.5,2424.1016 L1583.4375,2424.1016 L1585,2425.3906 L1585,2426.6016 L1585,2434.1016 L1565,2434.1016 L1563.7891,2434.1016 L1562.5,2432.5391 L1562.5,2431.6016 L1562.5,2430.6641 L1563.7891,2429.1016 L1565,2429.1016 L1565,2429.1016 L1565,2414.1016 L1565,2414.1016 L1563.7891,2414.1016 L1562.5,2412.5391 L1562.5,2411.6016 L1562.5,2410.6641 L1563.7891,2409.1016 L1565,2409.1016 L1585,2409.1016 L1585,2416.6016 L1585,2417.8125 L1583.4375,2419.1016 L1582.5,2419.1016 L1581.5625,2419.1016 L1580,2417.8125 L1580,2416.6016 L1580,2414.1016 L1570,2414.1016 L1570,2419.1016 L1572.5,2419.1016 L1572.5,2417.8906 L1572.5,2417.8906 L1574.0625,2416.6016 L1575,2416.6016 L1575.9375,2416.6016 L1577.5,2417.8906 L1577.5,2419.1016 L1577.5,2424.1016 L1577.5,2425.3125 L1575.9375,2426.6016 L1575.9375,2426.6016 L1575,2426.6016 L1574.0625,2426.6016 L1572.5,2425.3125 L1572.5,2425.3125 L1572.5,2424.1016 L1570,2424.1016 Z " fill="#000000"/><ellipse cx="1621.25" cy="2420.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="120" x="1636.25" y="2433.877">TagType</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1538.75" x2="1761.25" y1="2461.6016" y2="2461.6016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="117.5" x="1551.25" y="2500.1489">PRIMITIVE</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="187.5" x="1551.25" y="2534.7388">CONSTRUCTED</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1538.75" x2="1761.25" y1="2550.7813" y2="2550.7813"/><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><rect codeLine="116" fill="#FEFECE" height="243.7695" id="BodyError" style="stroke:#D4AC0D;stroke-width:3.75;" width="552.5" x="748.75" y="610.3516"/><ellipse cx="931.875" cy="650.3516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M936.875,641.6016 Q937.3828,640.3516 937.9688,639.7266 Q938.5547,639.1016 939.2188,639.1016 Q940.3906,639.1016 941.1328,639.8047 Q941.875,640.5078 941.875,642.1484 L941.875,646.0547 Q941.875,647.6953 941.1719,648.3984 Q940.4688,649.1016 939.375,649.1016 Q938.3984,649.1016 937.7734,648.6719 Q937.1484,648.2422 936.875,647.1094 Q936.7578,646.3281 936.3281,645.8984 Q935.5469,645.0781 934.1406,644.6094 Q932.7344,644.1016 931.3281,644.1016 Q929.5703,644.1016 928.0859,644.8047 Q926.6406,645.5078 925.5078,647.0703 Q924.375,648.6328 924.375,650.7813 L924.375,653.0859 Q924.375,655.6641 926.4844,657.3828 Q928.5938,659.1016 932.3438,659.1016 Q934.5703,659.1016 936.1328,658.5938 Q937.0313,658.3203 938.0469,657.4219 Q938.7109,656.9141 939.0625,656.7578 Q939.4141,656.6016 939.8438,656.6016 Q940.6641,656.6016 941.25,657.2656 Q941.875,657.8906 941.875,658.7891 Q941.875,659.6484 941.0156,660.6641 Q939.7656,662.1484 937.7734,662.9688 Q935.1563,664.1016 931.9531,664.1016 Q928.2031,664.1016 925.1953,662.6172 Q922.7734,661.4453 921.0547,658.9063 Q919.375,656.3672 919.375,653.3594 L919.375,650.625 Q919.375,647.5 920.8594,644.7656 Q922.3828,642.0313 925,640.5859 Q927.6563,639.1016 930.625,639.1016 Q932.4219,639.1016 933.9844,639.7266 Q935.5469,640.3516 936.875,641.6016 Z " fill="#000000"/><ellipse cx="995.625" cy="649.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="137.5" x="1010.625" y="662.627">BodyError</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="751.25" x2="1298.75" y1="690.3516" y2="690.3516"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="751.25" x2="1298.75" y1="710.3516" y2="710.3516"/><ellipse cx="776.25" cy="737.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="487.5" x="798.75" y="748.8989">BodyError (RuntimeException exception)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="751.25" x2="1298.75" y1="764.9414" y2="764.9414"/><ellipse cx="776.25" cy="792.4414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="205" x="798.75" y="803.4888">String getCode ()</text><ellipse cx="776.25" cy="827.0313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="402.5" x="798.75" y="838.0786">RuntimeException getException ()</text><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><rect codeLine="123" fill="#FEFECE" height="154.5898" id="BodyErrorJsonDeserializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="477.5" x="2428.75" y="655.3516"/><ellipse cx="2466.25" cy="695.3516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2471.25,686.6016 Q2471.7578,685.3516 2472.3438,684.7266 Q2472.9297,684.1016 2473.5938,684.1016 Q2474.7656,684.1016 2475.5078,684.8047 Q2476.25,685.5078 2476.25,687.1484 L2476.25,691.0547 Q2476.25,692.6953 2475.5469,693.3984 Q2474.8438,694.1016 2473.75,694.1016 Q2472.7734,694.1016 2472.1484,693.6719 Q2471.5234,693.2422 2471.25,692.1094 Q2471.1328,691.3281 2470.7031,690.8984 Q2469.9219,690.0781 2468.5156,689.6094 Q2467.1094,689.1016 2465.7031,689.1016 Q2463.9453,689.1016 2462.4609,689.8047 Q2461.0156,690.5078 2459.8828,692.0703 Q2458.75,693.6328 2458.75,695.7813 L2458.75,698.0859 Q2458.75,700.6641 2460.8594,702.3828 Q2462.9688,704.1016 2466.7188,704.1016 Q2468.9453,704.1016 2470.5078,703.5938 Q2471.4063,703.3203 2472.4219,702.4219 Q2473.0859,701.9141 2473.4375,701.7578 Q2473.7891,701.6016 2474.2188,701.6016 Q2475.0391,701.6016 2475.625,702.2656 Q2476.25,702.8906 2476.25,703.7891 Q2476.25,704.6484 2475.3906,705.6641 Q2474.1406,707.1484 2472.1484,707.9688 Q2469.5313,709.1016 2466.3281,709.1016 Q2462.5781,709.1016 2459.5703,707.6172 Q2457.1484,706.4453 2455.4297,703.9063 Q2453.75,701.3672 2453.75,698.3594 L2453.75,695.625 Q2453.75,692.5 2455.2344,689.7656 Q2456.7578,687.0313 2459.375,685.5859 Q2462.0313,684.1016 2465,684.1016 Q2466.7969,684.1016 2468.3594,684.7266 Q2469.9219,685.3516 2471.25,686.6016 Z " fill="#000000"/><ellipse cx="2513.75" cy="694.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="370" x="2528.75" y="707.627">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2431.25" x2="2903.75" y1="735.3516" y2="735.3516"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2431.25" x2="2903.75" y1="755.3516" y2="755.3516"/><ellipse cx="2456.25" cy="782.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="350" x="2478.75" y="793.8989">BodyErrorJsonDeserializer ()</text><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><rect codeLine="126" fill="#FEFECE" height="154.5898" id="ByteArrayJsonAdapter" style="stroke:#D4AC0D;stroke-width:3.75;" width="412.5" x="1928.75" y="655.3516"/><ellipse cx="1966.25" cy="695.3516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1971.25,686.6016 Q1971.7578,685.3516 1972.3438,684.7266 Q1972.9297,684.1016 1973.5938,684.1016 Q1974.7656,684.1016 1975.5078,684.8047 Q1976.25,685.5078 1976.25,687.1484 L1976.25,691.0547 Q1976.25,692.6953 1975.5469,693.3984 Q1974.8438,694.1016 1973.75,694.1016 Q1972.7734,694.1016 1972.1484,693.6719 Q1971.5234,693.2422 1971.25,692.1094 Q1971.1328,691.3281 1970.7031,690.8984 Q1969.9219,690.0781 1968.5156,689.6094 Q1967.1094,689.1016 1965.7031,689.1016 Q1963.9453,689.1016 1962.4609,689.8047 Q1961.0156,690.5078 1959.8828,692.0703 Q1958.75,693.6328 1958.75,695.7813 L1958.75,698.0859 Q1958.75,700.6641 1960.8594,702.3828 Q1962.9688,704.1016 1966.7188,704.1016 Q1968.9453,704.1016 1970.5078,703.5938 Q1971.4063,703.3203 1972.4219,702.4219 Q1973.0859,701.9141 1973.4375,701.7578 Q1973.7891,701.6016 1974.2188,701.6016 Q1975.0391,701.6016 1975.625,702.2656 Q1976.25,702.8906 1976.25,703.7891 Q1976.25,704.6484 1975.3906,705.6641 Q1974.1406,707.1484 1972.1484,707.9688 Q1969.5313,709.1016 1966.3281,709.1016 Q1962.5781,709.1016 1959.5703,707.6172 Q1957.1484,706.4453 1955.4297,703.9063 Q1953.75,701.3672 1953.75,698.3594 L1953.75,695.625 Q1953.75,692.5 1955.2344,689.7656 Q1956.7578,687.0313 1959.375,685.5859 Q1962.0313,684.1016 1965,684.1016 Q1966.7969,684.1016 1968.3594,684.7266 Q1969.9219,685.3516 1971.25,686.6016 Z " fill="#000000"/><ellipse cx="2013.75" cy="694.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="305" x="2028.75" y="707.627">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1931.25" x2="2338.75" y1="735.3516" y2="735.3516"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1931.25" x2="2338.75" y1="755.3516" y2="755.3516"/><ellipse cx="1956.25" cy="782.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="307.5" x="1978.75" y="793.8989">ByteArrayJsonAdapter ()</text><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><rect codeLine="129" fill="#FEFECE" height="154.5898" id="ThrowableJsonSerializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="450" x="1390" y="655.3516"/><ellipse cx="1427.5" cy="695.3516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1432.5,686.6016 Q1433.0078,685.3516 1433.5938,684.7266 Q1434.1797,684.1016 1434.8438,684.1016 Q1436.0156,684.1016 1436.7578,684.8047 Q1437.5,685.5078 1437.5,687.1484 L1437.5,691.0547 Q1437.5,692.6953 1436.7969,693.3984 Q1436.0938,694.1016 1435,694.1016 Q1434.0234,694.1016 1433.3984,693.6719 Q1432.7734,693.2422 1432.5,692.1094 Q1432.3828,691.3281 1431.9531,690.8984 Q1431.1719,690.0781 1429.7656,689.6094 Q1428.3594,689.1016 1426.9531,689.1016 Q1425.1953,689.1016 1423.7109,689.8047 Q1422.2656,690.5078 1421.1328,692.0703 Q1420,693.6328 1420,695.7813 L1420,698.0859 Q1420,700.6641 1422.1094,702.3828 Q1424.2188,704.1016 1427.9688,704.1016 Q1430.1953,704.1016 1431.7578,703.5938 Q1432.6563,703.3203 1433.6719,702.4219 Q1434.3359,701.9141 1434.6875,701.7578 Q1435.0391,701.6016 1435.4688,701.6016 Q1436.2891,701.6016 1436.875,702.2656 Q1437.5,702.8906 1437.5,703.7891 Q1437.5,704.6484 1436.6406,705.6641 Q1435.3906,707.1484 1433.3984,707.9688 Q1430.7813,709.1016 1427.5781,709.1016 Q1423.8281,709.1016 1420.8203,707.6172 Q1418.3984,706.4453 1416.6797,703.9063 Q1415,701.3672 1415,698.3594 L1415,695.625 Q1415,692.5 1416.4844,689.7656 Q1418.0078,687.0313 1420.625,685.5859 Q1423.2813,684.1016 1426.25,684.1016 Q1428.0469,684.1016 1429.6094,684.7266 Q1431.1719,685.3516 1432.5,686.6016 Z " fill="#000000"/><ellipse cx="1475" cy="694.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="342.5" x="1490" y="707.627">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1392.5" x2="1837.5" y1="735.3516" y2="735.3516"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1392.5" x2="1837.5" y1="755.3516" y2="755.3516"/><ellipse cx="1417.5" cy="782.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="327.5" x="1440" y="793.8989">ThrowableJsonSerializer ()</text><!--MD5=[8d9bde54355986e3f49a9a29cb69ac07]
class KeypleGsonParser--><rect codeLine="132" fill="#FEFECE" height="292.9492" id="KeypleGsonParser" style="stroke:#D4AC0D;stroke-width:3.75;" width="432.5" x="228.75" y="586.6016"/><ellipse cx="266.25" cy="626.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M271.25,617.8516 Q271.7578,616.6016 272.3438,615.9766 Q272.9297,615.3516 273.5938,615.3516 Q274.7656,615.3516 275.5078,616.0547 Q276.25,616.7578 276.25,618.3984 L276.25,622.3047 Q276.25,623.9453 275.5469,624.6484 Q274.8438,625.3516 273.75,625.3516 Q272.7734,625.3516 272.1484,624.9219 Q271.5234,624.4922 271.25,623.3594 Q271.1328,622.5781 270.7031,622.1484 Q269.9219,621.3281 268.5156,620.8594 Q267.1094,620.3516 265.7031,620.3516 Q263.9453,620.3516 262.4609,621.0547 Q261.0156,621.7578 259.8828,623.3203 Q258.75,624.8828 258.75,627.0313 L258.75,629.3359 Q258.75,631.9141 260.8594,633.6328 Q262.9688,635.3516 266.7188,635.3516 Q268.9453,635.3516 270.5078,634.8438 Q271.4063,634.5703 272.4219,633.6719 Q273.0859,633.1641 273.4375,633.0078 Q273.7891,632.8516 274.2188,632.8516 Q275.0391,632.8516 275.625,633.5156 Q276.25,634.1406 276.25,635.0391 Q276.25,635.8984 275.3906,636.9141 Q274.1406,638.3984 272.1484,639.2188 Q269.5313,640.3516 266.3281,640.3516 Q262.5781,640.3516 259.5703,638.8672 Q257.1484,637.6953 255.4297,635.1563 Q253.75,632.6172 253.75,629.6094 L253.75,626.875 Q253.75,623.75 255.2344,621.0156 Q256.7578,618.2813 259.375,616.8359 Q262.0313,615.3516 265,615.3516 Q266.7969,615.3516 268.3594,615.9766 Q269.9219,616.6016 271.25,617.8516 Z " fill="#000000"/><ellipse cx="313.75" cy="625.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="328.75" y="638.877">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="257.5" x="396.25" y="638.877">KeypleGsonParser</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="231.25" x2="658.75" y1="666.6016" y2="666.6016"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="231.25" x2="658.75" y1="686.6016" y2="686.6016"/><ellipse cx="256.25" cy="714.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="217.5" x="278.75" y="725.1489">Gson getParser ()</text><ellipse cx="256.25" cy="748.6914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="340" x="278.75" y="759.7388">Gson registerTypeAdapter (</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="302.5" x="338.75" y="794.3286">Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="185" x="338.75" y="828.9185">Object adapter,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="307.5" x="338.75" y="863.5083">boolean withSubclasses)</text><!--MD5=[62a24b7dfcf3592c626cd89f66c90b2a]
class ContactCardCommonProtocols--><rect codeLine="142" fill="#FEFECE" height="258.3594" id="ContactCardCommonProtocols" style="stroke:#D4AC0D;stroke-width:3.75;" width="597.5" x="1791.25" y="1184.1016"/><ellipse cx="1855.75" cy="1224.1016" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1852,1226.6016 L1852,1231.6016 L1862,1231.6016 L1862,1229.1016 L1862,1227.8906 L1863.5625,1226.6016 L1864.5,1226.6016 L1865.4375,1226.6016 L1867,1227.8906 L1867,1229.1016 L1867,1236.6016 L1847,1236.6016 L1845.7891,1236.6016 L1844.5,1235.0391 L1844.5,1234.1016 L1844.5,1233.1641 L1845.7891,1231.6016 L1847,1231.6016 L1847,1231.6016 L1847,1216.6016 L1847,1216.6016 L1845.7891,1216.6016 L1844.5,1215.0391 L1844.5,1214.1016 L1844.5,1213.1641 L1845.7891,1211.6016 L1847,1211.6016 L1867,1211.6016 L1867,1219.1016 L1867,1220.3125 L1865.4375,1221.6016 L1864.5,1221.6016 L1863.5625,1221.6016 L1862,1220.3125 L1862,1219.1016 L1862,1216.6016 L1852,1216.6016 L1852,1221.6016 L1854.5,1221.6016 L1854.5,1220.3906 L1854.5,1220.3906 L1856.0625,1219.1016 L1857,1219.1016 L1857.9375,1219.1016 L1859.5,1220.3906 L1859.5,1221.6016 L1859.5,1226.6016 L1859.5,1227.8125 L1857.9375,1229.1016 L1857.9375,1229.1016 L1857,1229.1016 L1856.0625,1229.1016 L1854.5,1227.8125 L1854.5,1227.8125 L1854.5,1226.6016 L1852,1226.6016 Z " fill="#000000"/><ellipse cx="1909.25" cy="1222.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="430" x="1924.25" y="1236.377">ContactCardCommonProtocols</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1793.75" x2="2386.25" y1="1264.1016" y2="1264.1016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="147.5" x="1806.25" y="1302.6489">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="197.5" x="1806.25" y="1337.2388">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="192.5" x="1806.25" y="1371.8286">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="567.5" x="1806.25" y="1406.4185">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1793.75" x2="2386.25" y1="1422.4609" y2="1422.4609"/><!--MD5=[47ce9033b06c4ed5e96c5ff2e598f366]
class ContactlessCardCommonProtocols--><rect codeLine="148" fill="#FEFECE" height="327.5391" id="ContactlessCardCommonProtocols" style="stroke:#D4AC0D;stroke-width:3.75;" width="592.5" x="1111.25" y="1149.1016"/><ellipse cx="1148.75" cy="1189.1016" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1145,1191.6016 L1145,1196.6016 L1155,1196.6016 L1155,1194.1016 L1155,1192.8906 L1156.5625,1191.6016 L1157.5,1191.6016 L1158.4375,1191.6016 L1160,1192.8906 L1160,1194.1016 L1160,1201.6016 L1140,1201.6016 L1138.7891,1201.6016 L1137.5,1200.0391 L1137.5,1199.1016 L1137.5,1198.1641 L1138.7891,1196.6016 L1140,1196.6016 L1140,1196.6016 L1140,1181.6016 L1140,1181.6016 L1138.7891,1181.6016 L1137.5,1180.0391 L1137.5,1179.1016 L1137.5,1178.1641 L1138.7891,1176.6016 L1140,1176.6016 L1160,1176.6016 L1160,1184.1016 L1160,1185.3125 L1158.4375,1186.6016 L1157.5,1186.6016 L1156.5625,1186.6016 L1155,1185.3125 L1155,1184.1016 L1155,1181.6016 L1145,1181.6016 L1145,1186.6016 L1147.5,1186.6016 L1147.5,1185.3906 L1147.5,1185.3906 L1149.0625,1184.1016 L1150,1184.1016 L1150.9375,1184.1016 L1152.5,1185.3906 L1152.5,1186.6016 L1152.5,1191.6016 L1152.5,1192.8125 L1150.9375,1194.1016 L1150.9375,1194.1016 L1150,1194.1016 L1149.0625,1194.1016 L1147.5,1192.8125 L1147.5,1192.8125 L1147.5,1191.6016 L1145,1191.6016 Z " fill="#000000"/><ellipse cx="1196.25" cy="1187.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="485" x="1211.25" y="1201.377">ContactlessCardCommonProtocols</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1113.75" x2="1701.25" y1="1229.1016" y2="1229.1016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="162.5" x="1126.25" y="1267.6489">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="282.5" x="1126.25" y="1302.2388">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="277.5" x="1126.25" y="1336.8286">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="235" x="1126.25" y="1371.4185">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="232.5" x="1126.25" y="1406.0083">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="377.5" x="1126.25" y="1440.5981">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1113.75" x2="1701.25" y1="1456.6406" y2="1456.6406"/><!--MD5=[5c6c7d52e42032554528404b62c1d271]
class RuntimeException--><rect codeLine="47" fill="#FEFECE" height="120" id="RuntimeException" style="stroke:#D4AC0D;stroke-width:3.75;" width="360" x="845" y="134.1016"/><ellipse cx="882.5" cy="174.1016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M887.5,165.3516 Q888.0078,164.1016 888.5938,163.4766 Q889.1797,162.8516 889.8438,162.8516 Q891.0156,162.8516 891.7578,163.5547 Q892.5,164.2578 892.5,165.8984 L892.5,169.8047 Q892.5,171.4453 891.7969,172.1484 Q891.0938,172.8516 890,172.8516 Q889.0234,172.8516 888.3984,172.4219 Q887.7734,171.9922 887.5,170.8594 Q887.3828,170.0781 886.9531,169.6484 Q886.1719,168.8281 884.7656,168.3594 Q883.3594,167.8516 881.9531,167.8516 Q880.1953,167.8516 878.7109,168.5547 Q877.2656,169.2578 876.1328,170.8203 Q875,172.3828 875,174.5313 L875,176.8359 Q875,179.4141 877.1094,181.1328 Q879.2188,182.8516 882.9688,182.8516 Q885.1953,182.8516 886.7578,182.3438 Q887.6563,182.0703 888.6719,181.1719 Q889.3359,180.6641 889.6875,180.5078 Q890.0391,180.3516 890.4688,180.3516 Q891.2891,180.3516 891.875,181.0156 Q892.5,181.6406 892.5,182.5391 Q892.5,183.3984 891.6406,184.4141 Q890.3906,185.8984 888.3984,186.7188 Q885.7813,187.8516 882.5781,187.8516 Q878.8281,187.8516 875.8203,186.3672 Q873.3984,185.1953 871.6797,182.6563 Q870,180.1172 870,177.1094 L870,174.375 Q870,171.25 871.4844,168.5156 Q873.0078,165.7813 875.625,164.3359 Q878.2813,162.8516 881.25,162.8516 Q883.0469,162.8516 884.6094,163.4766 Q886.1719,164.1016 887.5,165.3516 Z " fill="#000000"/><ellipse cx="930" cy="172.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="252.5" x="945" y="186.377">RuntimeException</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="847.5" x2="1202.5" y1="214.1016" y2="214.1016"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="847.5" x2="1202.5" y1="234.1016" y2="234.1016"/><!--MD5=[0469281133f5120cce6c8ecdd1573efa]
class JsonSerializer--><rect codeLine="49" fill="#FEFECE" height="223.7695" id="JsonSerializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="527.5" x="1428.75" y="81.6016"/><ellipse cx="1569.375" cy="121.6016" fill="#B4A7E5" rx="27.5" ry="27.5" style="stroke:#B4A7E5;stroke-width:2.5;"/><path d="M1571.875,114.1016 L1571.875,129.1016 L1576.875,129.1016 L1578.0859,129.1016 L1579.375,130.6641 L1579.375,131.6016 L1579.375,132.5391 L1578.0859,134.1016 L1576.875,134.1016 L1561.875,134.1016 L1560.6641,134.1016 L1559.375,132.5391 L1559.375,131.6016 L1559.375,130.6641 L1560.6641,129.1016 L1561.875,129.1016 L1566.875,129.1016 L1566.875,114.1016 L1561.875,114.1016 L1560.6641,114.1016 L1559.375,112.5391 L1559.375,111.6016 L1559.375,110.6641 L1560.6641,109.1016 L1561.875,109.1016 L1576.875,109.1016 L1578.0859,109.1016 L1579.375,110.6641 L1579.375,111.6016 L1579.375,112.5391 L1578.0859,114.1016 L1576.875,114.1016 L1571.875,114.1016 Z " fill="#000000"/><ellipse cx="1633.125" cy="120.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="197.5" x="1648.125" y="133.877">JsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1431.25" x2="1953.75" y1="161.6016" y2="161.6016"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1431.25" x2="1953.75" y1="181.6016" y2="181.6016"/><ellipse cx="1456.25" cy="209.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="275" x="1478.75" y="220.1489">JsonElement serialize (</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="342.5" x="1538.75" y="254.7388">byte[] data, Type typeOfSrc,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="402.5" x="1538.75" y="289.3286">JsonSerializationContext context)</text><!--MD5=[c04c9295e01f428445c71975bdd8b5e9]
class JsonDeserializer--><rect codeLine="55" fill="#FEFECE" height="223.7695" id="JsonDeserializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="785" x="2197.5" y="81.6016"/><ellipse cx="2435.625" cy="121.6016" fill="#B4A7E5" rx="27.5" ry="27.5" style="stroke:#B4A7E5;stroke-width:2.5;"/><path d="M2438.125,114.1016 L2438.125,129.1016 L2443.125,129.1016 L2444.3359,129.1016 L2445.625,130.6641 L2445.625,131.6016 L2445.625,132.5391 L2444.3359,134.1016 L2443.125,134.1016 L2428.125,134.1016 L2426.9141,134.1016 L2425.625,132.5391 L2425.625,131.6016 L2425.625,130.6641 L2426.9141,129.1016 L2428.125,129.1016 L2433.125,129.1016 L2433.125,114.1016 L2428.125,114.1016 L2426.9141,114.1016 L2425.625,112.5391 L2425.625,111.6016 L2425.625,110.6641 L2426.9141,109.1016 L2428.125,109.1016 L2443.125,109.1016 L2444.3359,109.1016 L2445.625,110.6641 L2445.625,111.6016 L2445.625,112.5391 L2444.3359,114.1016 L2443.125,114.1016 L2438.125,114.1016 Z " fill="#000000"/><ellipse cx="2499.375" cy="120.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="232.5" x="2514.375" y="133.877">JsonDeserializer</text><rect fill="#FFFFFF" height="42.7344" style="stroke:#000000;stroke-width:2.5;stroke-dasharray:2.0,2.0;" width="22.5" x="2967.5" y="74.1016"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="17.5" x="2970" y="107.7441">T</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2200" x2="2980" y1="161.6016" y2="161.6016"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2200" x2="2980" y1="181.6016" y2="181.6016"/><ellipse cx="2225" cy="209.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="170" x="2247.5" y="220.1489">T deserialize (</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="442.5" x="2307.5" y="254.7388">JsonElement jsonElement, Type type,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="660" x="2307.5" y="289.3286">JsonDeserializationContext jsonDeserializationContext)</text><!--MD5=[a6bd5ab15de37637d634d72ce80b38fb]
class Gson--><rect codeLine="61" fill="#FEFECE" height="154.5898" id="Gson" style="stroke:#D4AC0D;stroke-width:3.75;" width="247.5" x="321.25" y="116.6016"/><ellipse cx="358.75" cy="156.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M363.75,147.8516 Q364.2578,146.6016 364.8438,145.9766 Q365.4297,145.3516 366.0938,145.3516 Q367.2656,145.3516 368.0078,146.0547 Q368.75,146.7578 368.75,148.3984 L368.75,152.3047 Q368.75,153.9453 368.0469,154.6484 Q367.3438,155.3516 366.25,155.3516 Q365.2734,155.3516 364.6484,154.9219 Q364.0234,154.4922 363.75,153.3594 Q363.6328,152.5781 363.2031,152.1484 Q362.4219,151.3281 361.0156,150.8594 Q359.6094,150.3516 358.2031,150.3516 Q356.4453,150.3516 354.9609,151.0547 Q353.5156,151.7578 352.3828,153.3203 Q351.25,154.8828 351.25,157.0313 L351.25,159.3359 Q351.25,161.9141 353.3594,163.6328 Q355.4688,165.3516 359.2188,165.3516 Q361.4453,165.3516 363.0078,164.8438 Q363.9063,164.5703 364.9219,163.6719 Q365.5859,163.1641 365.9375,163.0078 Q366.2891,162.8516 366.7188,162.8516 Q367.5391,162.8516 368.125,163.5156 Q368.75,164.1406 368.75,165.0391 Q368.75,165.8984 367.8906,166.9141 Q366.6406,168.3984 364.6484,169.2188 Q362.0313,170.3516 358.8281,170.3516 Q355.0781,170.3516 352.0703,168.8672 Q349.6484,167.6953 347.9297,165.1563 Q346.25,162.6172 346.25,159.6094 L346.25,156.875 Q346.25,153.75 347.7344,151.0156 Q349.2578,148.2813 351.875,146.8359 Q354.5313,145.3516 357.5,145.3516 Q359.2969,145.3516 360.8594,145.9766 Q362.4219,146.6016 363.75,147.8516 Z " fill="#000000"/><ellipse cx="406.25" cy="155.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="421.25" y="168.877">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="72.5" x="488.75" y="168.877">Gson</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="323.75" x2="566.25" y1="196.6016" y2="196.6016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="22.5" x="336.25" y="235.1489">...</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="323.75" x2="566.25" y1="251.1914" y2="251.1914"/><!--MD5=[6bb4d5d05428fd13caba132cde5d5580]
reverse link JsonDeserializer to BodyErrorJsonDeserializer--><path d="M2613.3,357.1191 C2627.65,455.9641 2645.4,578.0841 2656.575,655.1216 " fill="none" id="JsonDeserializer-backto-BodyErrorJsonDeserializer" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2595.925,359.1916,2606.05,307.1941,2630.55,354.1616,2595.925,359.1916" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[de4a0b249dfa69974c5a70d183038923]
reverse link JsonSerializer to ByteArrayJsonAdapter--><path d="M1896.55,344.1441 C1993.9625,454.7866 2061.24,577.2891 2099.7125,654.7791 " fill="none" id="JsonSerializer-backto-ByteArrayJsonAdapter" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1883.4475,355.7541,1862.3575,307.1591,1909.1475,331.9941,1883.4475,355.7541" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[03ed7dd06522293754992153db21051a]
reverse link JsonDeserializer to ByteArrayJsonAdapter--><path d="M2370.9175,343.9291 C2272.27,453.5541 2206.14,576.9866 2168.7825,654.9291 " fill="none" id="JsonDeserializer-backto-ByteArrayJsonAdapter" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2358.51,331.5816,2405.625,307.3666,2383.895,355.6766,2358.51,331.5816" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[566f86fa9a54682a3d2b3ca2f5fe126b]
reverse link JsonSerializer to ThrowableJsonSerializer--><path d="M1669.1925,357.1191 C1654.84,455.9641 1637.11,578.0841 1625.9225,655.1216 " fill="none" id="JsonSerializer-backto-ThrowableJsonSerializer" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1651.9375,354.1616,1676.4425,307.1941,1686.575,359.1916,1651.9375,354.1616" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[a1bb761e63e90bbd81be59ff15302cff]
reverse link Tag to TagType--><path codeLine="161" d="M1618.47,2270.4266 C1619.2075,2310.0616 1621.115,2348.3091 1624.195,2380.7491 " fill="none" id="Tag-backto-TagType" style="stroke:#A80036;stroke-width:2.5;"/><ellipse cx="1618.3059" cy="2252.1432" fill="#FFFFFF" rx="20" ry="20" style="stroke:#A80036;stroke-width:2.5;"/><line style="stroke:#A80036;stroke-width:2.5;" x1="1618.4869" x2="1618.125" y1="2272.1424" y2="2232.1441"/><line style="stroke:#A80036;stroke-width:2.5;" x1="1598.3068" x2="1638.3051" y1="2252.3242" y2="2251.9623"/><!--MD5=[a1bb761e63e90bbd81be59ff15302cff]
reverse link Tag to TagType--><path codeLine="162" d="M1683.4725,2265.5166 C1682.77,2306.8966 1680.7175,2346.9716 1677.3225,2380.7491 " fill="none" id="Tag-backto-TagType-1" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="1683.75,2232.1441,1673.6251,2247.06,1683.4995,2262.143,1693.6244,2247.2271,1683.75,2232.1441" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="1663.0146" y="2354.7207">1</text><!--MD5=[3ff11dd639e9d76a654a06e76697482f]
link RuntimeException to BodyError--><path codeLine="164" d="M1025,254.7391 C1025,331.4591 1025,469.3666 1025,576.9966 " fill="none" id="RuntimeException-to-BodyError" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="1025,610.0416,1035,595.0416,1025,580.0416,1015,595.0416,1025,610.0416" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="1005.3672" y="308.2394">1</text><!--MD5=[a52a6f8bb31f8e294bfcc33bbb68b664]
link Gson to KeypleGsonParser--><path codeLine="166" d="M445,271.9441 C445,344.6891 445,457.5641 445,553.1041 " fill="none" id="Gson-to-KeypleGsonParser" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="445,586.0791,455,571.0791,445,556.0791,435,571.0791,445,586.0791" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="425.7773" y="325.0715">1</text><!--MD5=[fde90e8cf4b9d21de2a23c24d8f3474f]
link json to protocols--><!--MD5=[3588befeacdf3116e0fd853ffedaac46]
link json to ByteArrayUtil--><!--MD5=[77af3af9bd033e189bbbaaa818513ffc]
link ByteArrayUtil to Assert--><!--MD5=[aeb5b2c4431e938915c3a32b6f6528bb]
link protocols to bertlv--><!--MD5=[39b92fb545ce255e57229624269fa974]
@startuml
title
    Keyple 2.0 - keyple-utils - 2.0.0 (22/01/2021)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

+class RuntimeException {
}
+interface JsonSerializer {
    - -
    +JsonElement serialize (
        \tbyte[] data, Type typeOfSrc,
        \tJsonSerializationContext context)
}
+interface JsonDeserializer<T> {
    - -
    +T deserialize (
        \tJsonElement jsonElement, Type type,
        \tJsonDeserializationContext jsonDeserializationContext)
}
+class "**final** Gson" as Gson {
    ...
}
package "org.eclipse.keyple.utils" as utils {
    +class "**final** Assert" as Assert {
        - -
        +{static} Assert getInstance ()
        ..
        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (List<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    package bertlv {
        +class TLV {
            - -
            +TLV (byte[] binary)
            ..
            +boolean parse (Tag tag, int offset)
            +int getPosition ()
            +byte[] getValue ()
        }
        +class Tag {
            +{static} **final** byte UNIVERSAL
            +{static} **final** byte APPLICATION
            +{static} **final** byte CONTEXT
            +{static} **final** byte PRIVATE
            - -
            +Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)
            +Tag (byte[] binary, int offset)
            ..
            +int getTagNumber ()
            +byte getTagClass ()
            +TagType getTagType ()
            +int getTagSize ()
        }
        +enum TagType {
            PRIMITIVE
            CONSTRUCTED
        }
    }
    package json {
        +class BodyError {
            - -
            +BodyError (RuntimeException exception)
            ..
            +String getCode ()
            +RuntimeException getException ()
        }
        +class BodyErrorJsonDeserializer implements JsonDeserializer {
            +BodyErrorJsonDeserializer ()
        }
        +class ByteArrayJsonAdapter implements JsonSerializer, JsonDeserializer {
            +ByteArrayJsonAdapter ()
        }
        +class ThrowableJsonSerializer implements JsonSerializer {
            +ThrowableJsonSerializer ()
        }
        +class "**final** KeypleGsonParser" as KeypleGsonParser {
            - -
            +{static} Gson getParser ()
            +{static} Gson registerTypeAdapter (
                \tClass<?> matchingClass,
                \tObject adapter,
                \tboolean withSubclasses)
        }
    }
    package protocols {
        +enum ContactCardCommonProtocols {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocols {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

Tag +- - TagType
Tag *- - "1" TagType #C_LINK

BodyError *-up- "1" RuntimeException #C_LINK

KeypleGsonParser *-up- "1" Gson #C_LINK

' == LAYOUT ==

json -[hidden]- protocols
json -[hidden]- ByteArrayUtil
ByteArrayUtil -[hidden]- Assert

protocols -[hidden]- bertlv

' == STYLE ==

package utils #C_GREY1 {}
package bertlv #C_GREY2 {}
package json #C_GREY2 {}
package protocols #C_GREY2 {}
'class PoolLocalServiceServerUtils <<blue>>

@enduml

@startuml
title
    Keyple 2.0 - keyple-utils - 2.0.0 (22/01/2021)
end title



skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


+class RuntimeException {
}
+interface JsonSerializer {
    - -
    +JsonElement serialize (
        \tbyte[] data, Type typeOfSrc,
        \tJsonSerializationContext context)
}
+interface JsonDeserializer<T> {
    - -
    +T deserialize (
        \tJsonElement jsonElement, Type type,
        \tJsonDeserializationContext jsonDeserializationContext)
}
+class "**final** Gson" as Gson {
    ...
}
package "org.eclipse.keyple.utils" as utils {
    +class "**final** Assert" as Assert {
        - -
        +{static} Assert getInstance ()
        ..
        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (List<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    package bertlv {
        +class TLV {
            - -
            +TLV (byte[] binary)
            ..
            +boolean parse (Tag tag, int offset)
            +int getPosition ()
            +byte[] getValue ()
        }
        +class Tag {
            +{static} **final** byte UNIVERSAL
            +{static} **final** byte APPLICATION
            +{static} **final** byte CONTEXT
            +{static} **final** byte PRIVATE
            - -
            +Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)
            +Tag (byte[] binary, int offset)
            ..
            +int getTagNumber ()
            +byte getTagClass ()
            +TagType getTagType ()
            +int getTagSize ()
        }
        +enum TagType {
            PRIMITIVE
            CONSTRUCTED
        }
    }
    package json {
        +class BodyError {
            - -
            +BodyError (RuntimeException exception)
            ..
            +String getCode ()
            +RuntimeException getException ()
        }
        +class BodyErrorJsonDeserializer implements JsonDeserializer {
            +BodyErrorJsonDeserializer ()
        }
        +class ByteArrayJsonAdapter implements JsonSerializer, JsonDeserializer {
            +ByteArrayJsonAdapter ()
        }
        +class ThrowableJsonSerializer implements JsonSerializer {
            +ThrowableJsonSerializer ()
        }
        +class "**final** KeypleGsonParser" as KeypleGsonParser {
            - -
            +{static} Gson getParser ()
            +{static} Gson registerTypeAdapter (
                \tClass<?> matchingClass,
                \tObject adapter,
                \tboolean withSubclasses)
        }
    }
    package protocols {
        +enum ContactCardCommonProtocols {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocols {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}


Tag +- - TagType
Tag *- - "1" TagType #3498DB

BodyError *-up- "1" RuntimeException #3498DB

KeypleGsonParser *-up- "1" Gson #3498DB


json -[hidden]- protocols
json -[hidden]- ByteArrayUtil
ByteArrayUtil -[hidden]- Assert

protocols -[hidden]- bertlv


package utils #F8F9F9 {}
package bertlv #F2F3F4 {}
package json #F2F3F4 {}
package protocols #F2F3F4 {}

@enduml

PlantUML version 1.2021.00(Sun Jan 10 11:25:05 CET 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>
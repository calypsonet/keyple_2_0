<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3310px" preserveAspectRatio="none" style="width:2822px;height:3310px;" version="1.1" viewBox="0 0 2822 3310" width="2822.5px" zoomAndPan="magnify"><defs><filter height="1" id="b1rsmg1hlt7wyo0" width="1" x="0" y="0"><feFlood flood-color="#FFFF00" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="45" lengthAdjust="spacing" textLength="982.5" x="903.75" y="46.7139">Keyple 2.0 - keyple-java-utils - 2.0.0 (29/04/2021)</text><rect fill="#DDDDDD" height="157.0703" rx="12.5" ry="12.5" style="stroke:#000000;stroke-width:2.5;" width="495" x="1146.25" y="76.6016"/><text fill="#000000" font-family="sans-serif" font-size="35" lengthAdjust="spacing" text-decoration="underline" textLength="220" x="1161.25" y="125.4346">Colors legend</text><text fill="#000000" font-family="sans-serif" font-size="35" lengthAdjust="spacing" textLength="10" x="1391.25" y="125.4346">:</text><ellipse cx="1175" cy="158.3984" fill="#000000" rx="6.25" ry="6.25" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="35" lengthAdjust="spacing" text-decoration="underline" textLength="370" x="1193.75" y="169.458">External API references</text><text fill="#000000" font-family="sans-serif" font-size="35" lengthAdjust="spacing" textLength="10" x="1573.75" y="169.458">:</text><rect fill="#000000" height="8.75" style="stroke:#000000;stroke-width:0.0;" width="8.75" x="1213.75" y="201.1719"/><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="400" x="1226.25" y="213.4814">com.google.code.gson</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><polygon fill="#F8F9F9" points="40,271.1719,532.5,271.1719,550,330.1953,2780,330.1953,2780,3293.6719,40,3293.6719,40,271.1719" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="40" x2="550" y1="330.1953" y2="330.1953"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="477.5" x="50" y="312.5049">org.eclipse.keyple.core.util</text><!--MD5=[d5b9573ae558c3cb3918aa21faca5202]
cluster bertlv--><polygon fill="#F2F3F4" points="1117.5,2218.6719,1237.5,2218.6719,1255,2277.6953,2700,2277.6953,2700,3213.6719,1117.5,3213.6719,1117.5,2218.6719" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="1117.5" x2="1255" y1="2277.6953" y2="2277.6953"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="105" x="1127.5" y="2260.0049">bertlv</text><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><polygon fill="#F2F3F4" points="180,381.1719,270,381.1719,287.5,440.1953,2715,440.1953,2715,1541.1719,180,1541.1719,180,381.1719" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="180" x2="287.5" y1="440.1953" y2="440.1953"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="75" x="190" y="422.5049">json</text><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><polygon fill="#F2F3F4" points="1047.5,1621.1719,1210,1621.1719,1227.5,1680.1953,2480,1680.1953,2480,2118.6719,1047.5,2118.6719,1047.5,1621.1719" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="1047.5" x2="1227.5" y1="1680.1953" y2="1680.1953"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="147.5" x="1057.5" y="1662.5049">protocol</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="54" fill="#FEFECE" height="451.3086" id="Assert" style="stroke:#D4AC0D;stroke-width:3.75;" width="967.5" x="81.25" y="2344.9219"/><ellipse cx="464.375" cy="2384.9219" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M469.375,2376.1719 Q469.8828,2374.9219 470.4688,2374.2969 Q471.0547,2373.6719 471.7188,2373.6719 Q472.8906,2373.6719 473.6328,2374.375 Q474.375,2375.0781 474.375,2376.7188 L474.375,2380.625 Q474.375,2382.2656 473.6719,2382.9688 Q472.9688,2383.6719 471.875,2383.6719 Q470.8984,2383.6719 470.2734,2383.2422 Q469.6484,2382.8125 469.375,2381.6797 Q469.2578,2380.8984 468.8281,2380.4688 Q468.0469,2379.6484 466.6406,2379.1797 Q465.2344,2378.6719 463.8281,2378.6719 Q462.0703,2378.6719 460.5859,2379.375 Q459.1406,2380.0781 458.0078,2381.6406 Q456.875,2383.2031 456.875,2385.3516 L456.875,2387.6563 Q456.875,2390.2344 458.9844,2391.9531 Q461.0938,2393.6719 464.8438,2393.6719 Q467.0703,2393.6719 468.6328,2393.1641 Q469.5313,2392.8906 470.5469,2391.9922 Q471.2109,2391.4844 471.5625,2391.3281 Q471.9141,2391.1719 472.3438,2391.1719 Q473.1641,2391.1719 473.75,2391.8359 Q474.375,2392.4609 474.375,2393.3594 Q474.375,2394.2188 473.5156,2395.2344 Q472.2656,2396.7188 470.2734,2397.5391 Q467.6563,2398.6719 464.4531,2398.6719 Q460.7031,2398.6719 457.6953,2397.1875 Q455.2734,2396.0156 453.5547,2393.4766 Q451.875,2390.9375 451.875,2387.9297 L451.875,2385.1953 Q451.875,2382.0703 453.3594,2379.3359 Q454.8828,2376.6016 457.5,2375.1563 Q460.1563,2373.6719 463.125,2373.6719 Q464.9219,2373.6719 466.4844,2374.2969 Q468.0469,2374.9219 469.375,2376.1719 Z " fill="#000000"/><ellipse cx="528.125" cy="2383.6719" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="543.125" y="2397.1973">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="85" x="610.625" y="2397.1973">Assert</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="83.75" x2="1046.25" y1="2424.9219" y2="2424.9219"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="83.75" x2="1046.25" y1="2444.9219" y2="2444.9219"/><ellipse cx="108.75" cy="2472.4219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="257.5" x="131.25" y="2483.4692">Assert getInstance ()</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="83.75" x2="1046.25" y1="2499.5117" y2="2499.5117"/><ellipse cx="108.75" cy="2527.0117" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="475" x="131.25" y="2538.0591">Assert notNull (Object obj, String name)</text><ellipse cx="108.75" cy="2561.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="497.5" x="131.25" y="2572.6489">Assert notEmpty (String obj, String name)</text><ellipse cx="108.75" cy="2596.1914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="705" x="131.25" y="2607.2388">Assert notEmpty (List&lt;? extends Object&gt; obj, String name)</text><ellipse cx="108.75" cy="2630.7813" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="495" x="131.25" y="2641.8286">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="108.75" cy="2665.3711" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="562.5" x="131.25" y="2676.4185">Assert isTrue (Boolean condition, String name)</text><ellipse cx="108.75" cy="2699.9609" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="797.5" x="131.25" y="2711.0083">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="108.75" cy="2734.5508" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="655" x="131.25" y="2745.5981">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="108.75" cy="2769.1406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="902.5" x="131.25" y="2780.188">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><rect codeLine="67" fill="#FEFECE" height="362.1289" id="ByteArrayUtil" style="stroke:#D4AC0D;stroke-width:3.75;" width="665" x="240" y="1713.6719"/><ellipse cx="425.625" cy="1753.6719" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M430.625,1744.9219 Q431.1328,1743.6719 431.7188,1743.0469 Q432.3047,1742.4219 432.9688,1742.4219 Q434.1406,1742.4219 434.8828,1743.125 Q435.625,1743.8281 435.625,1745.4688 L435.625,1749.375 Q435.625,1751.0156 434.9219,1751.7188 Q434.2188,1752.4219 433.125,1752.4219 Q432.1484,1752.4219 431.5234,1751.9922 Q430.8984,1751.5625 430.625,1750.4297 Q430.5078,1749.6484 430.0781,1749.2188 Q429.2969,1748.3984 427.8906,1747.9297 Q426.4844,1747.4219 425.0781,1747.4219 Q423.3203,1747.4219 421.8359,1748.125 Q420.3906,1748.8281 419.2578,1750.3906 Q418.125,1751.9531 418.125,1754.1016 L418.125,1756.4063 Q418.125,1758.9844 420.2344,1760.7031 Q422.3438,1762.4219 426.0938,1762.4219 Q428.3203,1762.4219 429.8828,1761.9141 Q430.7813,1761.6406 431.7969,1760.7422 Q432.4609,1760.2344 432.8125,1760.0781 Q433.1641,1759.9219 433.5938,1759.9219 Q434.4141,1759.9219 435,1760.5859 Q435.625,1761.2109 435.625,1762.1094 Q435.625,1762.9688 434.7656,1763.9844 Q433.5156,1765.4688 431.5234,1766.2891 Q428.9063,1767.4219 425.7031,1767.4219 Q421.9531,1767.4219 418.9453,1765.9375 Q416.5234,1764.7656 414.8047,1762.2266 Q413.125,1759.6875 413.125,1756.6797 L413.125,1753.9453 Q413.125,1750.8203 414.6094,1748.0859 Q416.1328,1745.3516 418.75,1743.9063 Q421.4063,1742.4219 424.375,1742.4219 Q426.1719,1742.4219 427.7344,1743.0469 Q429.2969,1743.6719 430.625,1744.9219 Z " fill="#000000"/><ellipse cx="489.375" cy="1752.4219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="504.375" y="1765.9473">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="177.5" x="571.875" y="1765.9473">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="242.5" x2="902.5" y1="1793.6719" y2="1793.6719"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="242.5" x2="902.5" y1="1813.6719" y2="1813.6719"/><ellipse cx="267.5" cy="1841.1719" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="327.5" x="290" y="1852.2192">byte[] fromHex (String hex)</text><ellipse cx="267.5" cy="1875.7617" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="372.5" x="290" y="1886.8091">String toHex (byte[] byteArray)</text><ellipse cx="267.5" cy="1910.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="502.5" x="290" y="1921.3989">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="267.5" cy="1944.9414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="585" x="290" y="1955.9888">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="267.5" cy="1979.5313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="517.5" x="290" y="1990.5786">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="267.5" cy="2014.1211" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="600" x="290" y="2025.1685">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="267.5" cy="2048.7109" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="505" x="290" y="2059.7583">int fourBytesToInt (byte[] bytes, int offset)</text><!--MD5=[458b3a9396e0ca5416a37f6d6326ccaf]
class ApduUtil--><rect codeLine="76" fill="#FEFECE" height="189.1797" id="ApduUtil" style="stroke:#D4AC0D;stroke-width:3.75;" width="897.5" x="116.25" y="2963.6719"/><ellipse cx="448.125" cy="3003.6719" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M453.125,2994.9219 Q453.6328,2993.6719 454.2188,2993.0469 Q454.8047,2992.4219 455.4688,2992.4219 Q456.6406,2992.4219 457.3828,2993.125 Q458.125,2993.8281 458.125,2995.4688 L458.125,2999.375 Q458.125,3001.0156 457.4219,3001.7188 Q456.7188,3002.4219 455.625,3002.4219 Q454.6484,3002.4219 454.0234,3001.9922 Q453.3984,3001.5625 453.125,3000.4297 Q453.0078,2999.6484 452.5781,2999.2188 Q451.7969,2998.3984 450.3906,2997.9297 Q448.9844,2997.4219 447.5781,2997.4219 Q445.8203,2997.4219 444.3359,2998.125 Q442.8906,2998.8281 441.7578,3000.3906 Q440.625,3001.9531 440.625,3004.1016 L440.625,3006.4063 Q440.625,3008.9844 442.7344,3010.7031 Q444.8438,3012.4219 448.5938,3012.4219 Q450.8203,3012.4219 452.3828,3011.9141 Q453.2813,3011.6406 454.2969,3010.7422 Q454.9609,3010.2344 455.3125,3010.0781 Q455.6641,3009.9219 456.0938,3009.9219 Q456.9141,3009.9219 457.5,3010.5859 Q458.125,3011.2109 458.125,3012.1094 Q458.125,3012.9688 457.2656,3013.9844 Q456.0156,3015.4688 454.0234,3016.2891 Q451.4063,3017.4219 448.2031,3017.4219 Q444.4531,3017.4219 441.4453,3015.9375 Q439.0234,3014.7656 437.3047,3012.2266 Q435.625,3009.6875 435.625,3006.6797 L435.625,3003.9453 Q435.625,3000.8203 437.1094,2998.0859 Q438.6328,2995.3516 441.25,2993.9063 Q443.9063,2992.4219 446.875,2992.4219 Q448.6719,2992.4219 450.2344,2993.0469 Q451.7969,2993.6719 453.125,2994.9219 Z " fill="#000000"/><ellipse cx="511.875" cy="3002.4219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="526.875" y="3015.9473">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="117.5" x="594.375" y="3015.9473">ApduUtil</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="118.75" x2="1011.25" y1="3043.6719" y2="3043.6719"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="118.75" x2="1011.25" y1="3063.6719" y2="3063.6719"/><ellipse cx="143.75" cy="3091.1719" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="832.5" x="166.25" y="3102.2192">byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)</text><ellipse cx="143.75" cy="3125.7617" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="166.25" y="3136.8091">boolean isCase4 (byte[] apduCommand)</text><!--MD5=[0350750bc500a3be6e05085efbe7b0b1]
class TLV--><rect codeLine="81" fill="#FEFECE" height="278.3594" id="TLV" style="stroke:#D4AC0D;stroke-width:3.75;" width="477.5" x="2161.25" y="2432.4219"/><ellipse cx="2348.125" cy="2472.4219" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2353.125,2463.6719 Q2353.6328,2462.4219 2354.2188,2461.7969 Q2354.8047,2461.1719 2355.4688,2461.1719 Q2356.6406,2461.1719 2357.3828,2461.875 Q2358.125,2462.5781 2358.125,2464.2188 L2358.125,2468.125 Q2358.125,2469.7656 2357.4219,2470.4688 Q2356.7188,2471.1719 2355.625,2471.1719 Q2354.6484,2471.1719 2354.0234,2470.7422 Q2353.3984,2470.3125 2353.125,2469.1797 Q2353.0078,2468.3984 2352.5781,2467.9688 Q2351.7969,2467.1484 2350.3906,2466.6797 Q2348.9844,2466.1719 2347.5781,2466.1719 Q2345.8203,2466.1719 2344.3359,2466.875 Q2342.8906,2467.5781 2341.7578,2469.1406 Q2340.625,2470.7031 2340.625,2472.8516 L2340.625,2475.1563 Q2340.625,2477.7344 2342.7344,2479.4531 Q2344.8438,2481.1719 2348.5938,2481.1719 Q2350.8203,2481.1719 2352.3828,2480.6641 Q2353.2813,2480.3906 2354.2969,2479.4922 Q2354.9609,2478.9844 2355.3125,2478.8281 Q2355.6641,2478.6719 2356.0938,2478.6719 Q2356.9141,2478.6719 2357.5,2479.3359 Q2358.125,2479.9609 2358.125,2480.8594 Q2358.125,2481.7188 2357.2656,2482.7344 Q2356.0156,2484.2188 2354.0234,2485.0391 Q2351.4063,2486.1719 2348.2031,2486.1719 Q2344.4531,2486.1719 2341.4453,2484.6875 Q2339.0234,2483.5156 2337.3047,2480.9766 Q2335.625,2478.4375 2335.625,2475.4297 L2335.625,2472.6953 Q2335.625,2469.5703 2337.1094,2466.8359 Q2338.6328,2464.1016 2341.25,2462.6563 Q2343.9063,2461.1719 2346.875,2461.1719 Q2348.6719,2461.1719 2350.2344,2461.7969 Q2351.7969,2462.4219 2353.125,2463.6719 Z " fill="#000000"/><ellipse cx="2411.875" cy="2471.1719" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="55" x="2426.875" y="2484.6973">TLV</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2163.75" x2="2636.25" y1="2512.4219" y2="2512.4219"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2163.75" x2="2636.25" y1="2532.4219" y2="2532.4219"/><ellipse cx="2188.75" cy="2559.9219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="227.5" x="2211.25" y="2570.9692">TLV (byte[] binary)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="2163.75" x2="2636.25" y1="2587.0117" y2="2587.0117"/><ellipse cx="2188.75" cy="2614.5117" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="412.5" x="2211.25" y="2625.5591">boolean parse (Tag tag, int offset)</text><ellipse cx="2188.75" cy="2649.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="192.5" x="2211.25" y="2660.1489">int getPosition ()</text><ellipse cx="2188.75" cy="2683.6914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="210" x="2211.25" y="2694.7388">byte[] getValue ()</text><!--MD5=[39d6d2ea03de602dbf4d534e70c872a9]
class Tag--><rect codeLine="89" fill="#FEFECE" height="485.8984" id="Tag" style="stroke:#D4AC0D;stroke-width:3.75;" width="847.5" x="1226.25" y="2328.6719"/><ellipse cx="1599.375" cy="2368.6719" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1604.375,2359.9219 Q1604.8828,2358.6719 1605.4688,2358.0469 Q1606.0547,2357.4219 1606.7188,2357.4219 Q1607.8906,2357.4219 1608.6328,2358.125 Q1609.375,2358.8281 1609.375,2360.4688 L1609.375,2364.375 Q1609.375,2366.0156 1608.6719,2366.7188 Q1607.9688,2367.4219 1606.875,2367.4219 Q1605.8984,2367.4219 1605.2734,2366.9922 Q1604.6484,2366.5625 1604.375,2365.4297 Q1604.2578,2364.6484 1603.8281,2364.2188 Q1603.0469,2363.3984 1601.6406,2362.9297 Q1600.2344,2362.4219 1598.8281,2362.4219 Q1597.0703,2362.4219 1595.5859,2363.125 Q1594.1406,2363.8281 1593.0078,2365.3906 Q1591.875,2366.9531 1591.875,2369.1016 L1591.875,2371.4063 Q1591.875,2373.9844 1593.9844,2375.7031 Q1596.0938,2377.4219 1599.8438,2377.4219 Q1602.0703,2377.4219 1603.6328,2376.9141 Q1604.5313,2376.6406 1605.5469,2375.7422 Q1606.2109,2375.2344 1606.5625,2375.0781 Q1606.9141,2374.9219 1607.3438,2374.9219 Q1608.1641,2374.9219 1608.75,2375.5859 Q1609.375,2376.2109 1609.375,2377.1094 Q1609.375,2377.9688 1608.5156,2378.9844 Q1607.2656,2380.4688 1605.2734,2381.2891 Q1602.6563,2382.4219 1599.4531,2382.4219 Q1595.7031,2382.4219 1592.6953,2380.9375 Q1590.2734,2379.7656 1588.5547,2377.2266 Q1586.875,2374.6875 1586.875,2371.6797 L1586.875,2368.9453 Q1586.875,2365.8203 1588.3594,2363.0859 Q1589.8828,2360.3516 1592.5,2358.9063 Q1595.1563,2357.4219 1598.125,2357.4219 Q1599.9219,2357.4219 1601.4844,2358.0469 Q1603.0469,2358.6719 1604.375,2359.9219 Z " fill="#000000"/><ellipse cx="1663.125" cy="2367.4219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="52.5" x="1678.125" y="2380.9473">Tag</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1228.75" x2="2071.25" y1="2408.6719" y2="2408.6719"/><ellipse cx="1253.75" cy="2436.1719" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="2447.2192">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="205" x="1341.25" y="2447.2192">byte UNIVERSAL</text><ellipse cx="1253.75" cy="2470.7617" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="2481.8091">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="225" x="1341.25" y="2481.8091">byte APPLICATION</text><ellipse cx="1253.75" cy="2505.3516" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="2516.3989">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="177.5" x="1341.25" y="2516.3989">byte CONTEXT</text><ellipse cx="1253.75" cy="2539.9414" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="2550.9888">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="167.5" x="1341.25" y="2550.9888">byte PRIVATE</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1228.75" x2="2071.25" y1="2567.0313" y2="2567.0313"/><ellipse cx="1253.75" cy="2594.5313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="782.5" x="1276.25" y="2605.5786">Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)</text><ellipse cx="1253.75" cy="2629.1211" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="345" x="1276.25" y="2640.1685">Tag (byte[] binary, int offset)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="1228.75" x2="2071.25" y1="2656.2109" y2="2656.2109"/><ellipse cx="1253.75" cy="2683.7109" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="237.5" x="1276.25" y="2694.7583">int getTagNumber ()</text><ellipse cx="1253.75" cy="2718.3008" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="237.5" x="1276.25" y="2729.3481">byte getTagClass ()</text><ellipse cx="1253.75" cy="2752.8906" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="282.5" x="1276.25" y="2763.938">TagType getTagType ()</text><ellipse cx="1253.75" cy="2787.4805" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="197.5" x="1276.25" y="2798.5278">int getTagSize ()</text><!--MD5=[aafb32087e76cde11a76344dc4e614d8]
class TagType--><rect codeLine="103" fill="#FEFECE" height="189.1797" id="TagType" style="stroke:#D4AC0D;stroke-width:3.75;" width="227.5" x="1536.25" y="2963.6719"/><ellipse cx="1573.75" cy="3003.6719" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1570,3006.1719 L1570,3011.1719 L1580,3011.1719 L1580,3008.6719 L1580,3007.4609 L1581.5625,3006.1719 L1582.5,3006.1719 L1583.4375,3006.1719 L1585,3007.4609 L1585,3008.6719 L1585,3016.1719 L1565,3016.1719 L1563.7891,3016.1719 L1562.5,3014.6094 L1562.5,3013.6719 L1562.5,3012.7344 L1563.7891,3011.1719 L1565,3011.1719 L1565,3011.1719 L1565,2996.1719 L1565,2996.1719 L1563.7891,2996.1719 L1562.5,2994.6094 L1562.5,2993.6719 L1562.5,2992.7344 L1563.7891,2991.1719 L1565,2991.1719 L1585,2991.1719 L1585,2998.6719 L1585,2999.8828 L1583.4375,3001.1719 L1582.5,3001.1719 L1581.5625,3001.1719 L1580,2999.8828 L1580,2998.6719 L1580,2996.1719 L1570,2996.1719 L1570,3001.1719 L1572.5,3001.1719 L1572.5,2999.9609 L1572.5,2999.9609 L1574.0625,2998.6719 L1575,2998.6719 L1575.9375,2998.6719 L1577.5,2999.9609 L1577.5,3001.1719 L1577.5,3006.1719 L1577.5,3007.3828 L1575.9375,3008.6719 L1575.9375,3008.6719 L1575,3008.6719 L1574.0625,3008.6719 L1572.5,3007.3828 L1572.5,3007.3828 L1572.5,3006.1719 L1570,3006.1719 Z " fill="#000000"/><ellipse cx="1621.25" cy="3002.4219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="120" x="1636.25" y="3015.9473">TagType</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1538.75" x2="1761.25" y1="3043.6719" y2="3043.6719"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="117.5" x="1551.25" y="3082.2192">PRIMITIVE</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="187.5" x="1551.25" y="3116.8091">CONSTRUCTED</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1538.75" x2="1761.25" y1="3132.8516" y2="3132.8516"/><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><rect codeLine="109" fill="#FEFECE" height="243.7695" id="BodyError" style="stroke:#D4AC0D;stroke-width:3.75;" width="457.5" x="346.25" y="1158.6719"/><ellipse cx="481.875" cy="1198.6719" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M486.875,1189.9219 Q487.3828,1188.6719 487.9688,1188.0469 Q488.5547,1187.4219 489.2188,1187.4219 Q490.3906,1187.4219 491.1328,1188.125 Q491.875,1188.8281 491.875,1190.4688 L491.875,1194.375 Q491.875,1196.0156 491.1719,1196.7188 Q490.4688,1197.4219 489.375,1197.4219 Q488.3984,1197.4219 487.7734,1196.9922 Q487.1484,1196.5625 486.875,1195.4297 Q486.7578,1194.6484 486.3281,1194.2188 Q485.5469,1193.3984 484.1406,1192.9297 Q482.7344,1192.4219 481.3281,1192.4219 Q479.5703,1192.4219 478.0859,1193.125 Q476.6406,1193.8281 475.5078,1195.3906 Q474.375,1196.9531 474.375,1199.1016 L474.375,1201.4063 Q474.375,1203.9844 476.4844,1205.7031 Q478.5938,1207.4219 482.3438,1207.4219 Q484.5703,1207.4219 486.1328,1206.9141 Q487.0313,1206.6406 488.0469,1205.7422 Q488.7109,1205.2344 489.0625,1205.0781 Q489.4141,1204.9219 489.8438,1204.9219 Q490.6641,1204.9219 491.25,1205.5859 Q491.875,1206.2109 491.875,1207.1094 Q491.875,1207.9688 491.0156,1208.9844 Q489.7656,1210.4688 487.7734,1211.2891 Q485.1563,1212.4219 481.9531,1212.4219 Q478.2031,1212.4219 475.1953,1210.9375 Q472.7734,1209.7656 471.0547,1207.2266 Q469.375,1204.6875 469.375,1201.6797 L469.375,1198.9453 Q469.375,1195.8203 470.8594,1193.0859 Q472.3828,1190.3516 475,1188.9063 Q477.6563,1187.4219 480.625,1187.4219 Q482.4219,1187.4219 483.9844,1188.0469 Q485.5469,1188.6719 486.875,1189.9219 Z " fill="#000000"/><ellipse cx="545.625" cy="1197.4219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="137.5" x="560.625" y="1210.9473">BodyError</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="348.75" x2="801.25" y1="1238.6719" y2="1238.6719"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="348.75" x2="801.25" y1="1258.6719" y2="1258.6719"/><ellipse cx="373.75" cy="1286.1719" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="392.5" x="396.25" y="1297.2192">BodyError (Exception exception)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="348.75" x2="801.25" y1="1313.2617" y2="1313.2617"/><ellipse cx="373.75" cy="1340.7617" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="205" x="396.25" y="1351.8091">String getCode ()</text><ellipse cx="373.75" cy="1375.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="307.5" x="396.25" y="1386.3989">Exception getException ()</text><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><rect codeLine="116" fill="#FEFECE" height="288.8281" id="BodyErrorJsonDeserializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="785" x="1017.5" y="546.1719"/><ellipse cx="1200.625" cy="596.4063" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1205.625,587.6563 Q1206.1328,586.4063 1206.7188,585.7813 Q1207.3047,585.1563 1207.9688,585.1563 Q1209.1406,585.1563 1209.8828,585.8594 Q1210.625,586.5625 1210.625,588.2031 L1210.625,592.1094 Q1210.625,593.75 1209.9219,594.4531 Q1209.2188,595.1563 1208.125,595.1563 Q1207.1484,595.1563 1206.5234,594.7266 Q1205.8984,594.2969 1205.625,593.1641 Q1205.5078,592.3828 1205.0781,591.9531 Q1204.2969,591.1328 1202.8906,590.6641 Q1201.4844,590.1563 1200.0781,590.1563 Q1198.3203,590.1563 1196.8359,590.8594 Q1195.3906,591.5625 1194.2578,593.125 Q1193.125,594.6875 1193.125,596.8359 L1193.125,599.1406 Q1193.125,601.7188 1195.2344,603.4375 Q1197.3438,605.1563 1201.0938,605.1563 Q1203.3203,605.1563 1204.8828,604.6484 Q1205.7813,604.375 1206.7969,603.4766 Q1207.4609,602.9688 1207.8125,602.8125 Q1208.1641,602.6563 1208.5938,602.6563 Q1209.4141,602.6563 1210,603.3203 Q1210.625,603.9453 1210.625,604.8438 Q1210.625,605.7031 1209.7656,606.7188 Q1208.5156,608.2031 1206.5234,609.0234 Q1203.9063,610.1563 1200.7031,610.1563 Q1196.9531,610.1563 1193.9453,608.6719 Q1191.5234,607.5 1189.8047,604.9609 Q1188.125,602.4219 1188.125,599.4141 L1188.125,596.6797 Q1188.125,593.5547 1189.6094,590.8203 Q1191.1328,588.0859 1193.75,586.6406 Q1196.4063,585.1563 1199.375,585.1563 Q1201.1719,585.1563 1202.7344,585.7813 Q1204.2969,586.4063 1205.625,587.6563 Z " fill="#000000"/><ellipse cx="1264.375" cy="595.1563" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="1313.125" y="589.8145">&lt;&lt;</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="232.5" x="1348.125" y="589.8145">JsonDeserializer</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="1580.625" y="589.8145">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="370" x="1279.375" y="627.5488">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1020" x2="1800" y1="646.6406" y2="646.6406"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1020" x2="1800" y1="666.6406" y2="666.6406"/><ellipse cx="1045" cy="694.1406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="350" x="1067.5" y="705.188">BodyErrorJsonDeserializer ()</text><ellipse cx="1045" cy="773.3203" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="170" x="1067.5" y="784.3677">T deserialize (</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1237.5" y="784.3677">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1395" y="784.3677">jsonElement,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="1552.5" y="784.3677">Type</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="1620" y="784.3677">type,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="325" x="1127.5" y="818.9575">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="327.5" x="1460" y="818.9575">jsonDeserializationContext)</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1020" x2="1293.75" y1="738.5254" y2="738.5254"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" textLength="232.5" x="1293.75" y="748.5278">JsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1526.25" x2="1800" y1="738.5254" y2="738.5254"/><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><rect codeLine="123" fill="#FEFECE" height="440.332" id="ByteArrayJsonAdapter" style="stroke:#D4AC0D;stroke-width:3.75;" width="785" x="1890" y="471.1719"/><ellipse cx="2105.625" cy="540.2734" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2110.625,531.5234 Q2111.1328,530.2734 2111.7188,529.6484 Q2112.3047,529.0234 2112.9688,529.0234 Q2114.1406,529.0234 2114.8828,529.7266 Q2115.625,530.4297 2115.625,532.0703 L2115.625,535.9766 Q2115.625,537.6172 2114.9219,538.3203 Q2114.2188,539.0234 2113.125,539.0234 Q2112.1484,539.0234 2111.5234,538.5938 Q2110.8984,538.1641 2110.625,537.0313 Q2110.5078,536.25 2110.0781,535.8203 Q2109.2969,535 2107.8906,534.5313 Q2106.4844,534.0234 2105.0781,534.0234 Q2103.3203,534.0234 2101.8359,534.7266 Q2100.3906,535.4297 2099.2578,536.9922 Q2098.125,538.5547 2098.125,540.7031 L2098.125,543.0078 Q2098.125,545.5859 2100.2344,547.3047 Q2102.3438,549.0234 2106.0938,549.0234 Q2108.3203,549.0234 2109.8828,548.5156 Q2110.7813,548.2422 2111.7969,547.3438 Q2112.4609,546.8359 2112.8125,546.6797 Q2113.1641,546.5234 2113.5938,546.5234 Q2114.4141,546.5234 2115,547.1875 Q2115.625,547.8125 2115.625,548.7109 Q2115.625,549.5703 2114.7656,550.5859 Q2113.5156,552.0703 2111.5234,552.8906 Q2108.9063,554.0234 2105.7031,554.0234 Q2101.9531,554.0234 2098.9453,552.5391 Q2096.5234,551.3672 2094.8047,548.8281 Q2093.125,546.2891 2093.125,543.2813 L2093.125,540.5469 Q2093.125,537.4219 2094.6094,534.6875 Q2096.1328,531.9531 2098.75,530.5078 Q2101.4063,529.0234 2104.375,529.0234 Q2106.1719,529.0234 2107.7344,529.6484 Q2109.2969,530.2734 2110.625,531.5234 Z " fill="#000000"/><ellipse cx="2169.375" cy="539.0234" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="2203.125" y="514.8145">&lt;&lt;</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="197.5" x="2238.125" y="514.8145">JsonSerializer</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="2435.625" y="514.8145">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="2185.625" y="552.5488">&lt;&lt;</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="232.5" x="2220.625" y="552.5488">JsonDeserializer</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="2453.125" y="552.5488">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="305" x="2184.375" y="590.2832">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1892.5" x2="2672.5" y1="609.375" y2="609.375"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1892.5" x2="2672.5" y1="629.375" y2="629.375"/><ellipse cx="1917.5" cy="656.875" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="307.5" x="1940" y="667.9224">ByteArrayJsonAdapter ()</text><ellipse cx="1917.5" cy="736.0547" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1940" y="747.1021">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="200" x="2097.5" y="747.1021">serialize (T data,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="2305" y="747.1021">Type</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="132.5" x="2372.5" y="747.1021">typeOfSrc,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="295" x="2000" y="781.6919">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="100" x="2302.5" y="781.6919">context)</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1892.5" x2="2183.75" y1="701.2598" y2="701.2598"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" textLength="197.5" x="2183.75" y="711.2622">JsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2381.25" x2="2672.5" y1="701.2598" y2="701.2598"/><ellipse cx="1917.5" cy="849.8242" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="170" x="1940" y="860.8716">T deserialize (</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="2110" y="860.8716">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="2267.5" y="860.8716">jsonElement,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="2425" y="860.8716">Type</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="2492.5" y="860.8716">type,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="325" x="2000" y="895.4614">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="327.5" x="2332.5" y="895.4614">jsonDeserializationContext)</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1892.5" x2="2166.25" y1="815.0293" y2="815.0293"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" textLength="232.5" x="2166.25" y="825.0317">JsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2398.75" x2="2672.5" y1="815.0293" y2="815.0293"/><!--MD5=[f72f8ad6aaf73d77b05e402bfda701b7]
class IntegerJsonAdapter--><rect codeLine="133" fill="#FEFECE" height="440.332" id="IntegerJsonAdapter" style="stroke:#D4AC0D;stroke-width:3.75;" width="785" x="1017.5" y="1061.1719"/><ellipse cx="1234.375" cy="1130.2734" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1239.375,1121.5234 Q1239.8828,1120.2734 1240.4688,1119.6484 Q1241.0547,1119.0234 1241.7188,1119.0234 Q1242.8906,1119.0234 1243.6328,1119.7266 Q1244.375,1120.4297 1244.375,1122.0703 L1244.375,1125.9766 Q1244.375,1127.6172 1243.6719,1128.3203 Q1242.9688,1129.0234 1241.875,1129.0234 Q1240.8984,1129.0234 1240.2734,1128.5938 Q1239.6484,1128.1641 1239.375,1127.0313 Q1239.2578,1126.25 1238.8281,1125.8203 Q1238.0469,1125 1236.6406,1124.5313 Q1235.2344,1124.0234 1233.8281,1124.0234 Q1232.0703,1124.0234 1230.5859,1124.7266 Q1229.1406,1125.4297 1228.0078,1126.9922 Q1226.875,1128.5547 1226.875,1130.7031 L1226.875,1133.0078 Q1226.875,1135.5859 1228.9844,1137.3047 Q1231.0938,1139.0234 1234.8438,1139.0234 Q1237.0703,1139.0234 1238.6328,1138.5156 Q1239.5313,1138.2422 1240.5469,1137.3438 Q1241.2109,1136.8359 1241.5625,1136.6797 Q1241.9141,1136.5234 1242.3438,1136.5234 Q1243.1641,1136.5234 1243.75,1137.1875 Q1244.375,1137.8125 1244.375,1138.7109 Q1244.375,1139.5703 1243.5156,1140.5859 Q1242.2656,1142.0703 1240.2734,1142.8906 Q1237.6563,1144.0234 1234.4531,1144.0234 Q1230.7031,1144.0234 1227.6953,1142.5391 Q1225.2734,1141.3672 1223.5547,1138.8281 Q1221.875,1136.2891 1221.875,1133.2813 L1221.875,1130.5469 Q1221.875,1127.4219 1223.3594,1124.6875 Q1224.8828,1121.9531 1227.5,1120.5078 Q1230.1563,1119.0234 1233.125,1119.0234 Q1234.9219,1119.0234 1236.4844,1119.6484 Q1238.0469,1120.2734 1239.375,1121.5234 Z " fill="#000000"/><ellipse cx="1298.125" cy="1129.0234" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="1330.625" y="1104.8145">&lt;&lt;</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="197.5" x="1365.625" y="1104.8145">JsonSerializer</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="1563.125" y="1104.8145">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="1313.125" y="1142.5488">&lt;&lt;</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="232.5" x="1348.125" y="1142.5488">JsonDeserializer</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="1580.625" y="1142.5488">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="270" x="1329.375" y="1180.2832">IntegerJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1020" x2="1800" y1="1199.375" y2="1199.375"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1020" x2="1800" y1="1219.375" y2="1219.375"/><ellipse cx="1045" cy="1246.875" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="265" x="1067.5" y="1257.9224">IntegerJsonAdapter ()</text><ellipse cx="1045" cy="1326.0547" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1067.5" y="1337.1021">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="267.5" x="1225" y="1337.1021">serialize (Integer data,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="1500" y="1337.1021">Type</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="132.5" x="1567.5" y="1337.1021">typeOfSrc,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="295" x="1127.5" y="1371.6919">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="100" x="1430" y="1371.6919">context)</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1020" x2="1311.25" y1="1291.2598" y2="1291.2598"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" textLength="197.5" x="1311.25" y="1301.2622">JsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1508.75" x2="1800" y1="1291.2598" y2="1291.2598"/><ellipse cx="1045" cy="1439.8242" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="170" x="1067.5" y="1450.8716">T deserialize (</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1237.5" y="1450.8716">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1395" y="1450.8716">jsonElement,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="1552.5" y="1450.8716">Type</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="1620" y="1450.8716">type,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="325" x="1127.5" y="1485.4614">JsonDeserializationContext</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="327.5" x="1460" y="1485.4614">jsonDeserializationContext)</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1020" x2="1293.75" y1="1405.0293" y2="1405.0293"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" textLength="232.5" x="1293.75" y="1415.0317">JsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1526.25" x2="1800" y1="1405.0293" y2="1405.0293"/><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><rect codeLine="143" fill="#FEFECE" height="288.8281" id="ThrowableJsonSerializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="630" x="1890" y="1136.1719"/><ellipse cx="2009.375" cy="1186.4063" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2014.375,1177.6563 Q2014.8828,1176.4063 2015.4688,1175.7813 Q2016.0547,1175.1563 2016.7188,1175.1563 Q2017.8906,1175.1563 2018.6328,1175.8594 Q2019.375,1176.5625 2019.375,1178.2031 L2019.375,1182.1094 Q2019.375,1183.75 2018.6719,1184.4531 Q2017.9688,1185.1563 2016.875,1185.1563 Q2015.8984,1185.1563 2015.2734,1184.7266 Q2014.6484,1184.2969 2014.375,1183.1641 Q2014.2578,1182.3828 2013.8281,1181.9531 Q2013.0469,1181.1328 2011.6406,1180.6641 Q2010.2344,1180.1563 2008.8281,1180.1563 Q2007.0703,1180.1563 2005.5859,1180.8594 Q2004.1406,1181.5625 2003.0078,1183.125 Q2001.875,1184.6875 2001.875,1186.8359 L2001.875,1189.1406 Q2001.875,1191.7188 2003.9844,1193.4375 Q2006.0938,1195.1563 2009.8438,1195.1563 Q2012.0703,1195.1563 2013.6328,1194.6484 Q2014.5313,1194.375 2015.5469,1193.4766 Q2016.2109,1192.9688 2016.5625,1192.8125 Q2016.9141,1192.6563 2017.3438,1192.6563 Q2018.1641,1192.6563 2018.75,1193.3203 Q2019.375,1193.9453 2019.375,1194.8438 Q2019.375,1195.7031 2018.5156,1196.7188 Q2017.2656,1198.2031 2015.2734,1199.0234 Q2012.6563,1200.1563 2009.4531,1200.1563 Q2005.7031,1200.1563 2002.6953,1198.6719 Q2000.2734,1197.5 1998.5547,1194.9609 Q1996.875,1192.4219 1996.875,1189.4141 L1996.875,1186.6797 Q1996.875,1183.5547 1998.3594,1180.8203 Q1999.8828,1178.0859 2002.5,1176.6406 Q2005.1563,1175.1563 2008.125,1175.1563 Q2009.9219,1175.1563 2011.4844,1175.7813 Q2013.0469,1176.4063 2014.375,1177.6563 Z " fill="#000000"/><ellipse cx="2073.125" cy="1185.1563" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="2125.625" y="1179.8145">&lt;&lt;</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="197.5" x="2160.625" y="1179.8145">JsonSerializer</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="35" x="2358.125" y="1179.8145">&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="342.5" x="2088.125" y="1217.5488">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1892.5" x2="2517.5" y1="1236.6406" y2="1236.6406"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1892.5" x2="2517.5" y1="1256.6406" y2="1256.6406"/><ellipse cx="1917.5" cy="1284.1406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="327.5" x="1940" y="1295.188">ThrowableJsonSerializer ()</text><ellipse cx="1917.5" cy="1363.3203" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="150" x="1940" y="1374.3677">JsonElement</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="200" x="2097.5" y="1374.3677">serialize (T data,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="60" x="2305" y="1374.3677">Type</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="132.5" x="2372.5" y="1374.3677">typeOfSrc,</text><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="295" x="2000" y="1408.9575">JsonSerializationContext</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="100" x="2302.5" y="1408.9575">context)</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1892.5" x2="2106.25" y1="1328.5254" y2="1328.5254"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" textLength="197.5" x="2106.25" y="1338.5278">JsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2303.75" x2="2517.5" y1="1328.5254" y2="1328.5254"/><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><rect codeLine="150" fill="#FEFECE" height="278.3594" id="JsonUtil" style="stroke:#D4AC0D;stroke-width:3.75;" width="707.5" x="221.25" y="552.4219"/><ellipse cx="461.875" cy="592.4219" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M466.875,583.6719 Q467.3828,582.4219 467.9688,581.7969 Q468.5547,581.1719 469.2188,581.1719 Q470.3906,581.1719 471.1328,581.875 Q471.875,582.5781 471.875,584.2188 L471.875,588.125 Q471.875,589.7656 471.1719,590.4688 Q470.4688,591.1719 469.375,591.1719 Q468.3984,591.1719 467.7734,590.7422 Q467.1484,590.3125 466.875,589.1797 Q466.7578,588.3984 466.3281,587.9688 Q465.5469,587.1484 464.1406,586.6797 Q462.7344,586.1719 461.3281,586.1719 Q459.5703,586.1719 458.0859,586.875 Q456.6406,587.5781 455.5078,589.1406 Q454.375,590.7031 454.375,592.8516 L454.375,595.1563 Q454.375,597.7344 456.4844,599.4531 Q458.5938,601.1719 462.3438,601.1719 Q464.5703,601.1719 466.1328,600.6641 Q467.0313,600.3906 468.0469,599.4922 Q468.7109,598.9844 469.0625,598.8281 Q469.4141,598.6719 469.8438,598.6719 Q470.6641,598.6719 471.25,599.3359 Q471.875,599.9609 471.875,600.8594 Q471.875,601.7188 471.0156,602.7344 Q469.7656,604.2188 467.7734,605.0391 Q465.1563,606.1719 461.9531,606.1719 Q458.2031,606.1719 455.1953,604.6875 Q452.7734,603.5156 451.0547,600.9766 Q449.375,598.4375 449.375,595.4297 L449.375,592.6953 Q449.375,589.5703 450.8594,586.8359 Q452.3828,584.1016 455,582.6563 Q457.6563,581.1719 460.625,581.1719 Q462.4219,581.1719 463.9844,581.7969 Q465.5469,582.4219 466.875,583.6719 Z " fill="#000000"/><ellipse cx="525.625" cy="591.1719" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="540.625" y="604.6973">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="110" x="608.125" y="604.6973">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="223.75" x2="926.25" y1="632.4219" y2="632.4219"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="223.75" x2="926.25" y1="652.4219" y2="652.4219"/><ellipse cx="248.75" cy="679.9219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="65" x="271.25" y="690.9692">Gson</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="145" x="343.75" y="690.9692">getParser ()</text><ellipse cx="248.75" cy="714.5117" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" filter="url(#b1rsmg1hlt7wyo0)" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="65" x="271.25" y="725.5591">Gson</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="570" x="343.75" y="725.5591">registerTypeAdapter (Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="500" x="331.25" y="760.1489">Object adapter, boolean withSubclasses)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="223.75" x2="926.25" y1="776.1914" y2="776.1914"/><ellipse cx="248.75" cy="803.6914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="305" x="271.25" y="814.7388">String toJson (Object obj)</text><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><rect codeLine="160" fill="#FEFECE" height="258.3594" id="ContactCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:3.75;" width="597.5" x="1821.25" y="1766.1719"/><ellipse cx="1892.5" cy="1806.1719" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1888.75,1808.6719 L1888.75,1813.6719 L1898.75,1813.6719 L1898.75,1811.1719 L1898.75,1809.9609 L1900.3125,1808.6719 L1901.25,1808.6719 L1902.1875,1808.6719 L1903.75,1809.9609 L1903.75,1811.1719 L1903.75,1818.6719 L1883.75,1818.6719 L1882.5391,1818.6719 L1881.25,1817.1094 L1881.25,1816.1719 L1881.25,1815.2344 L1882.5391,1813.6719 L1883.75,1813.6719 L1883.75,1813.6719 L1883.75,1798.6719 L1883.75,1798.6719 L1882.5391,1798.6719 L1881.25,1797.1094 L1881.25,1796.1719 L1881.25,1795.2344 L1882.5391,1793.6719 L1883.75,1793.6719 L1903.75,1793.6719 L1903.75,1801.1719 L1903.75,1802.3828 L1902.1875,1803.6719 L1901.25,1803.6719 L1900.3125,1803.6719 L1898.75,1802.3828 L1898.75,1801.1719 L1898.75,1798.6719 L1888.75,1798.6719 L1888.75,1803.6719 L1891.25,1803.6719 L1891.25,1802.4609 L1891.25,1802.4609 L1892.8125,1801.1719 L1893.75,1801.1719 L1894.6875,1801.1719 L1896.25,1802.4609 L1896.25,1803.6719 L1896.25,1808.6719 L1896.25,1809.8828 L1894.6875,1811.1719 L1894.6875,1811.1719 L1893.75,1811.1719 L1892.8125,1811.1719 L1891.25,1809.8828 L1891.25,1809.8828 L1891.25,1808.6719 L1888.75,1808.6719 Z " fill="#000000"/><ellipse cx="1947.5" cy="1804.9219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="415" x="1962.5" y="1818.4473">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1823.75" x2="2416.25" y1="1846.1719" y2="1846.1719"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="147.5" x="1836.25" y="1884.7192">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="197.5" x="1836.25" y="1919.3091">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="192.5" x="1836.25" y="1953.8989">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="567.5" x="1836.25" y="1988.4888">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1823.75" x2="2416.25" y1="2004.5313" y2="2004.5313"/><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><rect codeLine="166" fill="#FEFECE" height="327.5391" id="ContactlessCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:3.75;" width="577.5" x="1156.25" y="1731.1719"/><ellipse cx="1193.75" cy="1771.1719" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1190,1773.6719 L1190,1778.6719 L1200,1778.6719 L1200,1776.1719 L1200,1774.9609 L1201.5625,1773.6719 L1202.5,1773.6719 L1203.4375,1773.6719 L1205,1774.9609 L1205,1776.1719 L1205,1783.6719 L1185,1783.6719 L1183.7891,1783.6719 L1182.5,1782.1094 L1182.5,1781.1719 L1182.5,1780.2344 L1183.7891,1778.6719 L1185,1778.6719 L1185,1778.6719 L1185,1763.6719 L1185,1763.6719 L1183.7891,1763.6719 L1182.5,1762.1094 L1182.5,1761.1719 L1182.5,1760.2344 L1183.7891,1758.6719 L1185,1758.6719 L1205,1758.6719 L1205,1766.1719 L1205,1767.3828 L1203.4375,1768.6719 L1202.5,1768.6719 L1201.5625,1768.6719 L1200,1767.3828 L1200,1766.1719 L1200,1763.6719 L1190,1763.6719 L1190,1768.6719 L1192.5,1768.6719 L1192.5,1767.4609 L1192.5,1767.4609 L1194.0625,1766.1719 L1195,1766.1719 L1195.9375,1766.1719 L1197.5,1767.4609 L1197.5,1768.6719 L1197.5,1773.6719 L1197.5,1774.8828 L1195.9375,1776.1719 L1195.9375,1776.1719 L1195,1776.1719 L1194.0625,1776.1719 L1192.5,1774.8828 L1192.5,1774.8828 L1192.5,1773.6719 L1190,1773.6719 Z " fill="#000000"/><ellipse cx="1241.25" cy="1769.9219" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="470" x="1256.25" y="1783.4473">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1158.75" x2="1731.25" y1="1811.1719" y2="1811.1719"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="162.5" x="1171.25" y="1849.7192">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="282.5" x="1171.25" y="1884.3091">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="277.5" x="1171.25" y="1918.8989">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="235" x="1171.25" y="1953.4888">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="232.5" x="1171.25" y="1988.0786">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="377.5" x="1171.25" y="2022.6685">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1158.75" x2="1731.25" y1="2038.7109" y2="2038.7109"/><!--MD5=[a1bb761e63e90bbd81be59ff15302cff]
reverse link Tag to TagType--><path codeLine="179" d="M1618.47,2852.4969 C1619.2075,2892.1319 1621.115,2930.3794 1624.195,2962.8194 " fill="none" id="Tag-backto-TagType" style="stroke:#A80036;stroke-width:2.5;"/><ellipse cx="1618.3059" cy="2834.2136" fill="#FFFFFF" rx="20" ry="20" style="stroke:#A80036;stroke-width:2.5;"/><line style="stroke:#A80036;stroke-width:2.5;" x1="1618.4869" x2="1618.125" y1="2854.2127" y2="2814.2144"/><line style="stroke:#A80036;stroke-width:2.5;" x1="1598.3068" x2="1638.3051" y1="2834.3945" y2="2834.0326"/><!--MD5=[a1bb761e63e90bbd81be59ff15302cff]
reverse link Tag to TagType--><path codeLine="180" d="M1683.4725,2847.5869 C1682.77,2888.9669 1680.7175,2929.0419 1677.3225,2962.8194 " fill="none" id="Tag-backto-TagType-1" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="1683.75,2814.2144,1673.6251,2829.1303,1683.4995,2844.2133,1693.6244,2829.2974,1683.75,2814.2144" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="1663.0146" y="2936.791">1</text><!--MD5=[8131b4a44a46583043de07eab64a92b3]
link JsonUtil to BodyError--><!--MD5=[d2ff078f209ffd91996285657b7790b6]
link BodyError to protocol--><!--MD5=[ed94d315f4f0bc1cb73a4b2ef9cbe9a6]
link BodyError to ByteArrayUtil--><!--MD5=[77af3af9bd033e189bbbaaa818513ffc]
link ByteArrayUtil to Assert--><!--MD5=[6bb83c1742bc0e576ff68716e4c88e08]
link Assert to ApduUtil--><!--MD5=[dc493a322bbc1c626ba99be9e371bb14]
link protocol to bertlv--><!--MD5=[08746151aa5e153f689b7b74edeef126]
link BodyErrorJsonDeserializer to ByteArrayJsonAdapter--><!--MD5=[e3d5c374db9c2c9863443010b01c3428]
link BodyErrorJsonDeserializer to IntegerJsonAdapter--><!--MD5=[84d1c3ae9fbd720ab63230ca86117075]
link IntegerJsonAdapter to ThrowableJsonSerializer--><!--MD5=[a670425f6d758c6c4dd94ed16ceb0f30]
@startuml
title
    Keyple 2.0 - keyple-java-utils - 2.0.0 (29/04/2021)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        - -
        +{static} Assert getInstance ()
        ..
        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (List<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)
        +{static} boolean isCase4 (byte[] apduCommand)
    }
    package bertlv {
        +class TLV {
            - -
            +TLV (byte[] binary)
            ..
            +boolean parse (Tag tag, int offset)
            +int getPosition ()
            +byte[] getValue ()
        }
        +class Tag {
            +{static} **final** byte UNIVERSAL
            +{static} **final** byte APPLICATION
            +{static} **final** byte CONTEXT
            +{static} **final** byte PRIVATE
            - -
            +Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)
            +Tag (byte[] binary, int offset)
            ..
            +int getTagNumber ()
            +byte getTagClass ()
            +TagType getTagType ()
            +int getTagSize ()
        }
        +enum TagType {
            PRIMITIVE
            CONSTRUCTED
        }
    }
    package json {
        +class BodyError {
            - -
            +BodyError (Exception exception)
            ..
            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer</back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            - -
            +BodyErrorJsonDeserializer ()
            - - **JsonDeserializer** - -
            +T deserialize (<back:yellow>JsonElement</back> jsonElement, <back:yellow>Type</back> type,
                \t<back:yellow>JsonDeserializationContext</back> jsonDeserializationContext)
        }
        +class "<<<back:yellow>JsonSerializer</back>>>\n<<<back:yellow>JsonDeserializer</back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            - -
            +ByteArrayJsonAdapter ()
            - - **JsonSerializer** - -
            +<back:yellow>JsonElement</back> serialize (T data, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            - - **JsonDeserializer** - -
            +T deserialize (<back:yellow>JsonElement</back> jsonElement, <back:yellow>Type</back> type,
                \t<back:yellow>JsonDeserializationContext</back> jsonDeserializationContext)
        }
        +class "<<<back:yellow>JsonSerializer</back>>>\n<<<back:yellow>JsonDeserializer</back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            - -
            +IntegerJsonAdapter ()
            - - **JsonSerializer** - -
            +<back:yellow>JsonElement</back> serialize (Integer data, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            - - **JsonDeserializer** - -
            +T deserialize (<back:yellow>JsonElement</back> jsonElement, <back:yellow>Type</back> type,
                \t<back:yellow>JsonDeserializationContext</back> jsonDeserializationContext)
        }
        +class "<<<back:yellow>JsonSerializer</back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            - -
            +ThrowableJsonSerializer ()
            - - **JsonSerializer** - -
            +<back:yellow>JsonElement</back> serialize (T data, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
        +class "**final** JsonUtil" as JsonUtil {
            - -
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} <back:yellow>Gson</back> registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)
            ..
            +{static} String toJson (Object obj)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

Tag +- - TagType
Tag *- - "1" TagType #C_LINK

' == LAYOUT ==

JsonUtil -[hidden]- BodyError
BodyError -[hidden]- protocol
BodyError -[hidden]- ByteArrayUtil
ByteArrayUtil -[hidden]- Assert
Assert -[hidden]- ApduUtil

protocol -[hidden]- bertlv

' == STYLE ==

package util #C_GREY1 {}
package bertlv #C_GREY2 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}
'class PoolLocalServiceServerUtils <<blue>>

@enduml

@startuml
title
    Keyple 2.0 - keyple-java-utils - 2.0.0 (29/04/2021)
end title



skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:yellow>**com.google.code.gson**</back>
end legend

package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        - -
        +{static} Assert getInstance ()
        ..
        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (List<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    +class "**final** ApduUtil" as ApduUtil {
        +{static} byte[] build (byte cla, byte ins, byte p1, byte p2, byte[] dataIn, Byte le)
        +{static} boolean isCase4 (byte[] apduCommand)
    }
    package bertlv {
        +class TLV {
            - -
            +TLV (byte[] binary)
            ..
            +boolean parse (Tag tag, int offset)
            +int getPosition ()
            +byte[] getValue ()
        }
        +class Tag {
            +{static} **final** byte UNIVERSAL
            +{static} **final** byte APPLICATION
            +{static} **final** byte CONTEXT
            +{static} **final** byte PRIVATE
            - -
            +Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)
            +Tag (byte[] binary, int offset)
            ..
            +int getTagNumber ()
            +byte getTagClass ()
            +TagType getTagType ()
            +int getTagSize ()
        }
        +enum TagType {
            PRIMITIVE
            CONSTRUCTED
        }
    }
    package json {
        +class BodyError {
            - -
            +BodyError (Exception exception)
            ..
            +String getCode ()
            +Exception getException ()
        }
        +class "<<<back:yellow>JsonDeserializer</back>>>\nBodyErrorJsonDeserializer" as BodyErrorJsonDeserializer {
            - -
            +BodyErrorJsonDeserializer ()
            - - **JsonDeserializer** - -
            +T deserialize (<back:yellow>JsonElement</back> jsonElement, <back:yellow>Type</back> type,
                \t<back:yellow>JsonDeserializationContext</back> jsonDeserializationContext)
        }
        +class "<<<back:yellow>JsonSerializer</back>>>\n<<<back:yellow>JsonDeserializer</back>>>\nByteArrayJsonAdapter" as ByteArrayJsonAdapter {
            - -
            +ByteArrayJsonAdapter ()
            - - **JsonSerializer** - -
            +<back:yellow>JsonElement</back> serialize (T data, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            - - **JsonDeserializer** - -
            +T deserialize (<back:yellow>JsonElement</back> jsonElement, <back:yellow>Type</back> type,
                \t<back:yellow>JsonDeserializationContext</back> jsonDeserializationContext)
        }
        +class "<<<back:yellow>JsonSerializer</back>>>\n<<<back:yellow>JsonDeserializer</back>>>\nIntegerJsonAdapter" as IntegerJsonAdapter {
            - -
            +IntegerJsonAdapter ()
            - - **JsonSerializer** - -
            +<back:yellow>JsonElement</back> serialize (Integer data, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
            - - **JsonDeserializer** - -
            +T deserialize (<back:yellow>JsonElement</back> jsonElement, <back:yellow>Type</back> type,
                \t<back:yellow>JsonDeserializationContext</back> jsonDeserializationContext)
        }
        +class "<<<back:yellow>JsonSerializer</back>>>\nThrowableJsonSerializer" as ThrowableJsonSerializer {
            - -
            +ThrowableJsonSerializer ()
            - - **JsonSerializer** - -
            +<back:yellow>JsonElement</back> serialize (T data, <back:yellow>Type</back> typeOfSrc,
                \t<back:yellow>JsonSerializationContext</back> context)
        }
        +class "**final** JsonUtil" as JsonUtil {
            - -
            +{static} <back:yellow>Gson</back> getParser ()
            +{static} <back:yellow>Gson</back> registerTypeAdapter (Class<?> matchingClass,
                \tObject adapter, boolean withSubclasses)
            ..
            +{static} String toJson (Object obj)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}


Tag +- - TagType
Tag *- - "1" TagType #3498DB


JsonUtil -[hidden]- BodyError
BodyError -[hidden]- protocol
BodyError -[hidden]- ByteArrayUtil
ByteArrayUtil -[hidden]- Assert
Assert -[hidden]- ApduUtil

protocol -[hidden]- bertlv


package util #F8F9F9 {}
package bertlv #F2F3F4 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2021.4(Sun Apr 04 10:49:39 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Dynamic Code Evolution 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>
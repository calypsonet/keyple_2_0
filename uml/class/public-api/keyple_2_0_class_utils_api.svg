<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2782.5px" preserveAspectRatio="none" style="width:3090px;height:2782px;" version="1.1" viewBox="0 0 3090 2782" width="3090px" zoomAndPan="magnify"><defs/><g><text fill="#000000" font-family="sans-serif" font-size="45" lengthAdjust="spacing" textLength="982.5" x="1037.5" y="46.7139">Keyple 2.0 - keyple-java-utils - 2.0.0 (11/03/2021)</text><!--MD5=[3e81cc6ee7da4fa8b6adc12b329096f6]
cluster util--><polygon fill="#F8F9F9" points="40,346.6016,532.5,346.6016,550,405.625,3047.5,405.625,3047.5,2766.6016,40,2766.6016,40,346.6016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="40" x2="550" y1="405.625" y2="405.625"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="477.5" x="50" y="387.9346">org.eclipse.keyple.core.util</text><!--MD5=[d5b9573ae558c3cb3918aa21faca5202]
cluster bertlv--><polygon fill="#F2F3F4" points="1117.5,1691.6016,1237.5,1691.6016,1255,1750.625,2700,1750.625,2700,2686.6016,1117.5,2686.6016,1117.5,1691.6016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="1117.5" x2="1255" y1="1750.625" y2="1750.625"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="105" x="1127.5" y="1732.9346">bertlv</text><!--MD5=[4ac75f36695ece63879c728112de416c]
cluster json--><polygon fill="#F2F3F4" points="120,476.6016,210,476.6016,227.5,535.625,2967.5,535.625,2967.5,994.1016,120,994.1016,120,476.6016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="120" x2="227.5" y1="535.625" y2="535.625"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="75" x="130" y="517.9346">json</text><!--MD5=[59e9faf83e5ffb743ef5750f57e8e967]
cluster protocol--><polygon fill="#F2F3F4" points="1002.5,1094.1016,1165,1094.1016,1182.5,1153.125,2435,1153.125,2435,1591.6016,1002.5,1591.6016,1002.5,1094.1016" style="stroke:#000000;stroke-width:3.75;"/><line style="stroke:#000000;stroke-width:3.75;" x1="1002.5" x2="1182.5" y1="1153.125" y2="1153.125"/><text fill="#000000" font-family="sans-serif" font-size="35" font-weight="bold" lengthAdjust="spacing" textLength="147.5" x="1012.5" y="1135.4346">protocol</text><!--MD5=[748d96b9802ee0d94a77604226d4f903]
class Assert--><rect codeLine="65" fill="#FEFECE" height="451.3086" id="Assert" style="stroke:#D4AC0D;stroke-width:3.75;" width="967.5" x="81.25" y="1817.8516"/><ellipse cx="464.375" cy="1857.8516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M469.375,1849.1016 Q469.8828,1847.8516 470.4688,1847.2266 Q471.0547,1846.6016 471.7188,1846.6016 Q472.8906,1846.6016 473.6328,1847.3047 Q474.375,1848.0078 474.375,1849.6484 L474.375,1853.5547 Q474.375,1855.1953 473.6719,1855.8984 Q472.9688,1856.6016 471.875,1856.6016 Q470.8984,1856.6016 470.2734,1856.1719 Q469.6484,1855.7422 469.375,1854.6094 Q469.2578,1853.8281 468.8281,1853.3984 Q468.0469,1852.5781 466.6406,1852.1094 Q465.2344,1851.6016 463.8281,1851.6016 Q462.0703,1851.6016 460.5859,1852.3047 Q459.1406,1853.0078 458.0078,1854.5703 Q456.875,1856.1328 456.875,1858.2813 L456.875,1860.5859 Q456.875,1863.1641 458.9844,1864.8828 Q461.0938,1866.6016 464.8438,1866.6016 Q467.0703,1866.6016 468.6328,1866.0938 Q469.5313,1865.8203 470.5469,1864.9219 Q471.2109,1864.4141 471.5625,1864.2578 Q471.9141,1864.1016 472.3438,1864.1016 Q473.1641,1864.1016 473.75,1864.7656 Q474.375,1865.3906 474.375,1866.2891 Q474.375,1867.1484 473.5156,1868.1641 Q472.2656,1869.6484 470.2734,1870.4688 Q467.6563,1871.6016 464.4531,1871.6016 Q460.7031,1871.6016 457.6953,1870.1172 Q455.2734,1868.9453 453.5547,1866.4063 Q451.875,1863.8672 451.875,1860.8594 L451.875,1858.125 Q451.875,1855 453.3594,1852.2656 Q454.8828,1849.5313 457.5,1848.0859 Q460.1563,1846.6016 463.125,1846.6016 Q464.9219,1846.6016 466.4844,1847.2266 Q468.0469,1847.8516 469.375,1849.1016 Z " fill="#000000"/><ellipse cx="528.125" cy="1856.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="543.125" y="1870.127">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="85" x="610.625" y="1870.127">Assert</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="83.75" x2="1046.25" y1="1897.8516" y2="1897.8516"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="83.75" x2="1046.25" y1="1917.8516" y2="1917.8516"/><ellipse cx="108.75" cy="1945.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="257.5" x="131.25" y="1956.3989">Assert getInstance ()</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="83.75" x2="1046.25" y1="1972.4414" y2="1972.4414"/><ellipse cx="108.75" cy="1999.9414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="475" x="131.25" y="2010.9888">Assert notNull (Object obj, String name)</text><ellipse cx="108.75" cy="2034.5313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="497.5" x="131.25" y="2045.5786">Assert notEmpty (String obj, String name)</text><ellipse cx="108.75" cy="2069.1211" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="705" x="131.25" y="2080.1685">Assert notEmpty (List&lt;? extends Object&gt; obj, String name)</text><ellipse cx="108.75" cy="2103.7109" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="495" x="131.25" y="2114.7583">Assert notEmpty (byte[] obj, String name)</text><ellipse cx="108.75" cy="2138.3008" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="562.5" x="131.25" y="2149.3481">Assert isTrue (Boolean condition, String name)</text><ellipse cx="108.75" cy="2172.8906" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="797.5" x="131.25" y="2183.938">Assert greaterOrEqual (Integer number, int minValue, String name)</text><ellipse cx="108.75" cy="2207.4805" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="655" x="131.25" y="2218.5278">Assert isEqual (Integer number, int value, String name)</text><ellipse cx="108.75" cy="2242.0703" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="902.5" x="131.25" y="2253.1177">Assert isInRange (Integer number, int minValue, int maxValue, String name)</text><!--MD5=[27f29ba09c13b8ede23502b37e39f025]
class ByteArrayUtil--><rect codeLine="78" fill="#FEFECE" height="362.1289" id="ByteArrayUtil" style="stroke:#D4AC0D;stroke-width:3.75;" width="665" x="155" y="1186.6016"/><ellipse cx="340.625" cy="1226.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M345.625,1217.8516 Q346.1328,1216.6016 346.7188,1215.9766 Q347.3047,1215.3516 347.9688,1215.3516 Q349.1406,1215.3516 349.8828,1216.0547 Q350.625,1216.7578 350.625,1218.3984 L350.625,1222.3047 Q350.625,1223.9453 349.9219,1224.6484 Q349.2188,1225.3516 348.125,1225.3516 Q347.1484,1225.3516 346.5234,1224.9219 Q345.8984,1224.4922 345.625,1223.3594 Q345.5078,1222.5781 345.0781,1222.1484 Q344.2969,1221.3281 342.8906,1220.8594 Q341.4844,1220.3516 340.0781,1220.3516 Q338.3203,1220.3516 336.8359,1221.0547 Q335.3906,1221.7578 334.2578,1223.3203 Q333.125,1224.8828 333.125,1227.0313 L333.125,1229.3359 Q333.125,1231.9141 335.2344,1233.6328 Q337.3438,1235.3516 341.0938,1235.3516 Q343.3203,1235.3516 344.8828,1234.8438 Q345.7813,1234.5703 346.7969,1233.6719 Q347.4609,1233.1641 347.8125,1233.0078 Q348.1641,1232.8516 348.5938,1232.8516 Q349.4141,1232.8516 350,1233.5156 Q350.625,1234.1406 350.625,1235.0391 Q350.625,1235.8984 349.7656,1236.9141 Q348.5156,1238.3984 346.5234,1239.2188 Q343.9063,1240.3516 340.7031,1240.3516 Q336.9531,1240.3516 333.9453,1238.8672 Q331.5234,1237.6953 329.8047,1235.1563 Q328.125,1232.6172 328.125,1229.6094 L328.125,1226.875 Q328.125,1223.75 329.6094,1221.0156 Q331.1328,1218.2813 333.75,1216.8359 Q336.4063,1215.3516 339.375,1215.3516 Q341.1719,1215.3516 342.7344,1215.9766 Q344.2969,1216.6016 345.625,1217.8516 Z " fill="#000000"/><ellipse cx="404.375" cy="1225.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="419.375" y="1238.877">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="177.5" x="486.875" y="1238.877">ByteArrayUtil</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="157.5" x2="817.5" y1="1266.6016" y2="1266.6016"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="157.5" x2="817.5" y1="1286.6016" y2="1286.6016"/><ellipse cx="182.5" cy="1314.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="327.5" x="205" y="1325.1489">byte[] fromHex (String hex)</text><ellipse cx="182.5" cy="1348.6914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="372.5" x="205" y="1359.7388">String toHex (byte[] byteArray)</text><ellipse cx="182.5" cy="1383.2813" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="502.5" x="205" y="1394.3286">int twoBytesToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1417.8711" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="585" x="205" y="1428.9185">int twoBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1452.4609" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="517.5" x="205" y="1463.5083">int threeBytesToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1487.0508" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="600" x="205" y="1498.0981">int threeBytesSignedToInt (byte[] bytes, int offset)</text><ellipse cx="182.5" cy="1521.6406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="505" x="205" y="1532.688">int fourBytesToInt (byte[] bytes, int offset)</text><!--MD5=[0350750bc500a3be6e05085efbe7b0b1]
class TLV--><rect codeLine="88" fill="#FEFECE" height="278.3594" id="TLV" style="stroke:#D4AC0D;stroke-width:3.75;" width="477.5" x="2161.25" y="1905.3516"/><ellipse cx="2348.125" cy="1945.3516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2353.125,1936.6016 Q2353.6328,1935.3516 2354.2188,1934.7266 Q2354.8047,1934.1016 2355.4688,1934.1016 Q2356.6406,1934.1016 2357.3828,1934.8047 Q2358.125,1935.5078 2358.125,1937.1484 L2358.125,1941.0547 Q2358.125,1942.6953 2357.4219,1943.3984 Q2356.7188,1944.1016 2355.625,1944.1016 Q2354.6484,1944.1016 2354.0234,1943.6719 Q2353.3984,1943.2422 2353.125,1942.1094 Q2353.0078,1941.3281 2352.5781,1940.8984 Q2351.7969,1940.0781 2350.3906,1939.6094 Q2348.9844,1939.1016 2347.5781,1939.1016 Q2345.8203,1939.1016 2344.3359,1939.8047 Q2342.8906,1940.5078 2341.7578,1942.0703 Q2340.625,1943.6328 2340.625,1945.7813 L2340.625,1948.0859 Q2340.625,1950.6641 2342.7344,1952.3828 Q2344.8438,1954.1016 2348.5938,1954.1016 Q2350.8203,1954.1016 2352.3828,1953.5938 Q2353.2813,1953.3203 2354.2969,1952.4219 Q2354.9609,1951.9141 2355.3125,1951.7578 Q2355.6641,1951.6016 2356.0938,1951.6016 Q2356.9141,1951.6016 2357.5,1952.2656 Q2358.125,1952.8906 2358.125,1953.7891 Q2358.125,1954.6484 2357.2656,1955.6641 Q2356.0156,1957.1484 2354.0234,1957.9688 Q2351.4063,1959.1016 2348.2031,1959.1016 Q2344.4531,1959.1016 2341.4453,1957.6172 Q2339.0234,1956.4453 2337.3047,1953.9063 Q2335.625,1951.3672 2335.625,1948.3594 L2335.625,1945.625 Q2335.625,1942.5 2337.1094,1939.7656 Q2338.6328,1937.0313 2341.25,1935.5859 Q2343.9063,1934.1016 2346.875,1934.1016 Q2348.6719,1934.1016 2350.2344,1934.7266 Q2351.7969,1935.3516 2353.125,1936.6016 Z " fill="#000000"/><ellipse cx="2411.875" cy="1944.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="55" x="2426.875" y="1957.627">TLV</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2163.75" x2="2636.25" y1="1985.3516" y2="1985.3516"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2163.75" x2="2636.25" y1="2005.3516" y2="2005.3516"/><ellipse cx="2188.75" cy="2032.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="227.5" x="2211.25" y="2043.8989">TLV (byte[] binary)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="2163.75" x2="2636.25" y1="2059.9414" y2="2059.9414"/><ellipse cx="2188.75" cy="2087.4414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="412.5" x="2211.25" y="2098.4888">boolean parse (Tag tag, int offset)</text><ellipse cx="2188.75" cy="2122.0313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="192.5" x="2211.25" y="2133.0786">int getPosition ()</text><ellipse cx="2188.75" cy="2156.6211" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="210" x="2211.25" y="2167.6685">byte[] getValue ()</text><!--MD5=[39d6d2ea03de602dbf4d534e70c872a9]
class Tag--><rect codeLine="96" fill="#FEFECE" height="485.8984" id="Tag" style="stroke:#D4AC0D;stroke-width:3.75;" width="847.5" x="1226.25" y="1801.6016"/><ellipse cx="1599.375" cy="1841.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1604.375,1832.8516 Q1604.8828,1831.6016 1605.4688,1830.9766 Q1606.0547,1830.3516 1606.7188,1830.3516 Q1607.8906,1830.3516 1608.6328,1831.0547 Q1609.375,1831.7578 1609.375,1833.3984 L1609.375,1837.3047 Q1609.375,1838.9453 1608.6719,1839.6484 Q1607.9688,1840.3516 1606.875,1840.3516 Q1605.8984,1840.3516 1605.2734,1839.9219 Q1604.6484,1839.4922 1604.375,1838.3594 Q1604.2578,1837.5781 1603.8281,1837.1484 Q1603.0469,1836.3281 1601.6406,1835.8594 Q1600.2344,1835.3516 1598.8281,1835.3516 Q1597.0703,1835.3516 1595.5859,1836.0547 Q1594.1406,1836.7578 1593.0078,1838.3203 Q1591.875,1839.8828 1591.875,1842.0313 L1591.875,1844.3359 Q1591.875,1846.9141 1593.9844,1848.6328 Q1596.0938,1850.3516 1599.8438,1850.3516 Q1602.0703,1850.3516 1603.6328,1849.8438 Q1604.5313,1849.5703 1605.5469,1848.6719 Q1606.2109,1848.1641 1606.5625,1848.0078 Q1606.9141,1847.8516 1607.3438,1847.8516 Q1608.1641,1847.8516 1608.75,1848.5156 Q1609.375,1849.1406 1609.375,1850.0391 Q1609.375,1850.8984 1608.5156,1851.9141 Q1607.2656,1853.3984 1605.2734,1854.2188 Q1602.6563,1855.3516 1599.4531,1855.3516 Q1595.7031,1855.3516 1592.6953,1853.8672 Q1590.2734,1852.6953 1588.5547,1850.1563 Q1586.875,1847.6172 1586.875,1844.6094 L1586.875,1841.875 Q1586.875,1838.75 1588.3594,1836.0156 Q1589.8828,1833.2813 1592.5,1831.8359 Q1595.1563,1830.3516 1598.125,1830.3516 Q1599.9219,1830.3516 1601.4844,1830.9766 Q1603.0469,1831.6016 1604.375,1832.8516 Z " fill="#000000"/><ellipse cx="1663.125" cy="1840.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="52.5" x="1678.125" y="1853.877">Tag</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1228.75" x2="2071.25" y1="1881.6016" y2="1881.6016"/><ellipse cx="1253.75" cy="1909.1016" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1920.1489">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="205" x="1341.25" y="1920.1489">byte UNIVERSAL</text><ellipse cx="1253.75" cy="1943.6914" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1954.7388">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="225" x="1341.25" y="1954.7388">byte APPLICATION</text><ellipse cx="1253.75" cy="1978.2813" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="1989.3286">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="177.5" x="1341.25" y="1989.3286">byte CONTEXT</text><ellipse cx="1253.75" cy="2012.8711" fill="none" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="57.5" x="1276.25" y="2023.9185">final</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="167.5" x="1341.25" y="2023.9185">byte PRIVATE</text><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1228.75" x2="2071.25" y1="2039.9609" y2="2039.9609"/><ellipse cx="1253.75" cy="2067.4609" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="782.5" x="1276.25" y="2078.5083">Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)</text><ellipse cx="1253.75" cy="2102.0508" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="345" x="1276.25" y="2113.0981">Tag (byte[] binary, int offset)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="1228.75" x2="2071.25" y1="2129.1406" y2="2129.1406"/><ellipse cx="1253.75" cy="2156.6406" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="237.5" x="1276.25" y="2167.688">int getTagNumber ()</text><ellipse cx="1253.75" cy="2191.2305" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="237.5" x="1276.25" y="2202.2778">byte getTagClass ()</text><ellipse cx="1253.75" cy="2225.8203" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="282.5" x="1276.25" y="2236.8677">TagType getTagType ()</text><ellipse cx="1253.75" cy="2260.4102" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="197.5" x="1276.25" y="2271.4575">int getTagSize ()</text><!--MD5=[aafb32087e76cde11a76344dc4e614d8]
class TagType--><rect codeLine="110" fill="#FEFECE" height="189.1797" id="TagType" style="stroke:#D4AC0D;stroke-width:3.75;" width="227.5" x="1536.25" y="2436.6016"/><ellipse cx="1573.75" cy="2476.6016" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1570,2479.1016 L1570,2484.1016 L1580,2484.1016 L1580,2481.6016 L1580,2480.3906 L1581.5625,2479.1016 L1582.5,2479.1016 L1583.4375,2479.1016 L1585,2480.3906 L1585,2481.6016 L1585,2489.1016 L1565,2489.1016 L1563.7891,2489.1016 L1562.5,2487.5391 L1562.5,2486.6016 L1562.5,2485.6641 L1563.7891,2484.1016 L1565,2484.1016 L1565,2484.1016 L1565,2469.1016 L1565,2469.1016 L1563.7891,2469.1016 L1562.5,2467.5391 L1562.5,2466.6016 L1562.5,2465.6641 L1563.7891,2464.1016 L1565,2464.1016 L1585,2464.1016 L1585,2471.6016 L1585,2472.8125 L1583.4375,2474.1016 L1582.5,2474.1016 L1581.5625,2474.1016 L1580,2472.8125 L1580,2471.6016 L1580,2469.1016 L1570,2469.1016 L1570,2474.1016 L1572.5,2474.1016 L1572.5,2472.8906 L1572.5,2472.8906 L1574.0625,2471.6016 L1575,2471.6016 L1575.9375,2471.6016 L1577.5,2472.8906 L1577.5,2474.1016 L1577.5,2479.1016 L1577.5,2480.3125 L1575.9375,2481.6016 L1575.9375,2481.6016 L1575,2481.6016 L1574.0625,2481.6016 L1572.5,2480.3125 L1572.5,2480.3125 L1572.5,2479.1016 L1570,2479.1016 Z " fill="#000000"/><ellipse cx="1621.25" cy="2475.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="120" x="1636.25" y="2488.877">TagType</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1538.75" x2="1761.25" y1="2516.6016" y2="2516.6016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="117.5" x="1551.25" y="2555.1489">PRIMITIVE</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="187.5" x="1551.25" y="2589.7388">CONSTRUCTED</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1538.75" x2="1761.25" y1="2605.7813" y2="2605.7813"/><!--MD5=[3d84c5190c7a3821707931f3b8039d88]
class BodyError--><rect codeLine="116" fill="#FEFECE" height="243.7695" id="BodyError" style="stroke:#D4AC0D;stroke-width:3.75;" width="552.5" x="748.75" y="637.8516"/><ellipse cx="931.875" cy="677.8516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M936.875,669.1016 Q937.3828,667.8516 937.9688,667.2266 Q938.5547,666.6016 939.2188,666.6016 Q940.3906,666.6016 941.1328,667.3047 Q941.875,668.0078 941.875,669.6484 L941.875,673.5547 Q941.875,675.1953 941.1719,675.8984 Q940.4688,676.6016 939.375,676.6016 Q938.3984,676.6016 937.7734,676.1719 Q937.1484,675.7422 936.875,674.6094 Q936.7578,673.8281 936.3281,673.3984 Q935.5469,672.5781 934.1406,672.1094 Q932.7344,671.6016 931.3281,671.6016 Q929.5703,671.6016 928.0859,672.3047 Q926.6406,673.0078 925.5078,674.5703 Q924.375,676.1328 924.375,678.2813 L924.375,680.5859 Q924.375,683.1641 926.4844,684.8828 Q928.5938,686.6016 932.3438,686.6016 Q934.5703,686.6016 936.1328,686.0938 Q937.0313,685.8203 938.0469,684.9219 Q938.7109,684.4141 939.0625,684.2578 Q939.4141,684.1016 939.8438,684.1016 Q940.6641,684.1016 941.25,684.7656 Q941.875,685.3906 941.875,686.2891 Q941.875,687.1484 941.0156,688.1641 Q939.7656,689.6484 937.7734,690.4688 Q935.1563,691.6016 931.9531,691.6016 Q928.2031,691.6016 925.1953,690.1172 Q922.7734,688.9453 921.0547,686.4063 Q919.375,683.8672 919.375,680.8594 L919.375,678.125 Q919.375,675 920.8594,672.2656 Q922.3828,669.5313 925,668.0859 Q927.6563,666.6016 930.625,666.6016 Q932.4219,666.6016 933.9844,667.2266 Q935.5469,667.8516 936.875,669.1016 Z " fill="#000000"/><ellipse cx="995.625" cy="676.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="137.5" x="1010.625" y="690.127">BodyError</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="751.25" x2="1298.75" y1="717.8516" y2="717.8516"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="751.25" x2="1298.75" y1="737.8516" y2="737.8516"/><ellipse cx="776.25" cy="765.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="487.5" x="798.75" y="776.3989">BodyError (RuntimeException exception)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="751.25" x2="1298.75" y1="792.4414" y2="792.4414"/><ellipse cx="776.25" cy="819.9414" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="205" x="798.75" y="830.9888">String getCode ()</text><ellipse cx="776.25" cy="854.5313" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="402.5" x="798.75" y="865.5786">RuntimeException getException ()</text><!--MD5=[9a218190a85a7a5cf1f408f9962c53bf]
class BodyErrorJsonDeserializer--><rect codeLine="123" fill="#FEFECE" height="154.5898" id="BodyErrorJsonDeserializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="477.5" x="2428.75" y="682.8516"/><ellipse cx="2466.25" cy="722.8516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M2471.25,714.1016 Q2471.7578,712.8516 2472.3438,712.2266 Q2472.9297,711.6016 2473.5938,711.6016 Q2474.7656,711.6016 2475.5078,712.3047 Q2476.25,713.0078 2476.25,714.6484 L2476.25,718.5547 Q2476.25,720.1953 2475.5469,720.8984 Q2474.8438,721.6016 2473.75,721.6016 Q2472.7734,721.6016 2472.1484,721.1719 Q2471.5234,720.7422 2471.25,719.6094 Q2471.1328,718.8281 2470.7031,718.3984 Q2469.9219,717.5781 2468.5156,717.1094 Q2467.1094,716.6016 2465.7031,716.6016 Q2463.9453,716.6016 2462.4609,717.3047 Q2461.0156,718.0078 2459.8828,719.5703 Q2458.75,721.1328 2458.75,723.2813 L2458.75,725.5859 Q2458.75,728.1641 2460.8594,729.8828 Q2462.9688,731.6016 2466.7188,731.6016 Q2468.9453,731.6016 2470.5078,731.0938 Q2471.4063,730.8203 2472.4219,729.9219 Q2473.0859,729.4141 2473.4375,729.2578 Q2473.7891,729.1016 2474.2188,729.1016 Q2475.0391,729.1016 2475.625,729.7656 Q2476.25,730.3906 2476.25,731.2891 Q2476.25,732.1484 2475.3906,733.1641 Q2474.1406,734.6484 2472.1484,735.4688 Q2469.5313,736.6016 2466.3281,736.6016 Q2462.5781,736.6016 2459.5703,735.1172 Q2457.1484,733.9453 2455.4297,731.4063 Q2453.75,728.8672 2453.75,725.8594 L2453.75,723.125 Q2453.75,720 2455.2344,717.2656 Q2456.7578,714.5313 2459.375,713.0859 Q2462.0313,711.6016 2465,711.6016 Q2466.7969,711.6016 2468.3594,712.2266 Q2469.9219,712.8516 2471.25,714.1016 Z " fill="#000000"/><ellipse cx="2513.75" cy="721.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="370" x="2528.75" y="735.127">BodyErrorJsonDeserializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2431.25" x2="2903.75" y1="762.8516" y2="762.8516"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2431.25" x2="2903.75" y1="782.8516" y2="782.8516"/><ellipse cx="2456.25" cy="810.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="350" x="2478.75" y="821.3989">BodyErrorJsonDeserializer ()</text><!--MD5=[f0f8c8dfcaa5a8f8c3b99a1fa7726780]
class ByteArrayJsonAdapter--><rect codeLine="126" fill="#FEFECE" height="154.5898" id="ByteArrayJsonAdapter" style="stroke:#D4AC0D;stroke-width:3.75;" width="412.5" x="1928.75" y="682.8516"/><ellipse cx="1966.25" cy="722.8516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1971.25,714.1016 Q1971.7578,712.8516 1972.3438,712.2266 Q1972.9297,711.6016 1973.5938,711.6016 Q1974.7656,711.6016 1975.5078,712.3047 Q1976.25,713.0078 1976.25,714.6484 L1976.25,718.5547 Q1976.25,720.1953 1975.5469,720.8984 Q1974.8438,721.6016 1973.75,721.6016 Q1972.7734,721.6016 1972.1484,721.1719 Q1971.5234,720.7422 1971.25,719.6094 Q1971.1328,718.8281 1970.7031,718.3984 Q1969.9219,717.5781 1968.5156,717.1094 Q1967.1094,716.6016 1965.7031,716.6016 Q1963.9453,716.6016 1962.4609,717.3047 Q1961.0156,718.0078 1959.8828,719.5703 Q1958.75,721.1328 1958.75,723.2813 L1958.75,725.5859 Q1958.75,728.1641 1960.8594,729.8828 Q1962.9688,731.6016 1966.7188,731.6016 Q1968.9453,731.6016 1970.5078,731.0938 Q1971.4063,730.8203 1972.4219,729.9219 Q1973.0859,729.4141 1973.4375,729.2578 Q1973.7891,729.1016 1974.2188,729.1016 Q1975.0391,729.1016 1975.625,729.7656 Q1976.25,730.3906 1976.25,731.2891 Q1976.25,732.1484 1975.3906,733.1641 Q1974.1406,734.6484 1972.1484,735.4688 Q1969.5313,736.6016 1966.3281,736.6016 Q1962.5781,736.6016 1959.5703,735.1172 Q1957.1484,733.9453 1955.4297,731.4063 Q1953.75,728.8672 1953.75,725.8594 L1953.75,723.125 Q1953.75,720 1955.2344,717.2656 Q1956.7578,714.5313 1959.375,713.0859 Q1962.0313,711.6016 1965,711.6016 Q1966.7969,711.6016 1968.3594,712.2266 Q1969.9219,712.8516 1971.25,714.1016 Z " fill="#000000"/><ellipse cx="2013.75" cy="721.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="305" x="2028.75" y="735.127">ByteArrayJsonAdapter</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1931.25" x2="2338.75" y1="762.8516" y2="762.8516"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1931.25" x2="2338.75" y1="782.8516" y2="782.8516"/><ellipse cx="1956.25" cy="810.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="307.5" x="1978.75" y="821.3989">ByteArrayJsonAdapter ()</text><!--MD5=[fc62ed06551ba356a446c123e88cc84c]
class ThrowableJsonSerializer--><rect codeLine="129" fill="#FEFECE" height="154.5898" id="ThrowableJsonSerializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="450" x="1390" y="682.8516"/><ellipse cx="1427.5" cy="722.8516" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M1432.5,714.1016 Q1433.0078,712.8516 1433.5938,712.2266 Q1434.1797,711.6016 1434.8438,711.6016 Q1436.0156,711.6016 1436.7578,712.3047 Q1437.5,713.0078 1437.5,714.6484 L1437.5,718.5547 Q1437.5,720.1953 1436.7969,720.8984 Q1436.0938,721.6016 1435,721.6016 Q1434.0234,721.6016 1433.3984,721.1719 Q1432.7734,720.7422 1432.5,719.6094 Q1432.3828,718.8281 1431.9531,718.3984 Q1431.1719,717.5781 1429.7656,717.1094 Q1428.3594,716.6016 1426.9531,716.6016 Q1425.1953,716.6016 1423.7109,717.3047 Q1422.2656,718.0078 1421.1328,719.5703 Q1420,721.1328 1420,723.2813 L1420,725.5859 Q1420,728.1641 1422.1094,729.8828 Q1424.2188,731.6016 1427.9688,731.6016 Q1430.1953,731.6016 1431.7578,731.0938 Q1432.6563,730.8203 1433.6719,729.9219 Q1434.3359,729.4141 1434.6875,729.2578 Q1435.0391,729.1016 1435.4688,729.1016 Q1436.2891,729.1016 1436.875,729.7656 Q1437.5,730.3906 1437.5,731.2891 Q1437.5,732.1484 1436.6406,733.1641 Q1435.3906,734.6484 1433.3984,735.4688 Q1430.7813,736.6016 1427.5781,736.6016 Q1423.8281,736.6016 1420.8203,735.1172 Q1418.3984,733.9453 1416.6797,731.4063 Q1415,728.8672 1415,725.8594 L1415,723.125 Q1415,720 1416.4844,717.2656 Q1418.0078,714.5313 1420.625,713.0859 Q1423.2813,711.6016 1426.25,711.6016 Q1428.0469,711.6016 1429.6094,712.2266 Q1431.1719,712.8516 1432.5,714.1016 Z " fill="#000000"/><ellipse cx="1475" cy="721.6016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="342.5" x="1490" y="735.127">ThrowableJsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1392.5" x2="1837.5" y1="762.8516" y2="762.8516"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1392.5" x2="1837.5" y1="782.8516" y2="782.8516"/><ellipse cx="1417.5" cy="810.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="327.5" x="1440" y="821.3989">ThrowableJsonSerializer ()</text><!--MD5=[ff1fef1d5f830c31212d01e346df5a91]
class JsonUtil--><rect codeLine="132" fill="#FEFECE" height="347.5391" id="JsonUtil" style="stroke:#D4AC0D;stroke-width:3.75;" width="432.5" x="228.75" y="586.6016"/><ellipse cx="332.625" cy="626.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M337.625,617.8516 Q338.1328,616.6016 338.7188,615.9766 Q339.3047,615.3516 339.9688,615.3516 Q341.1406,615.3516 341.8828,616.0547 Q342.625,616.7578 342.625,618.3984 L342.625,622.3047 Q342.625,623.9453 341.9219,624.6484 Q341.2188,625.3516 340.125,625.3516 Q339.1484,625.3516 338.5234,624.9219 Q337.8984,624.4922 337.625,623.3594 Q337.5078,622.5781 337.0781,622.1484 Q336.2969,621.3281 334.8906,620.8594 Q333.4844,620.3516 332.0781,620.3516 Q330.3203,620.3516 328.8359,621.0547 Q327.3906,621.7578 326.2578,623.3203 Q325.125,624.8828 325.125,627.0313 L325.125,629.3359 Q325.125,631.9141 327.2344,633.6328 Q329.3438,635.3516 333.0938,635.3516 Q335.3203,635.3516 336.8828,634.8438 Q337.7813,634.5703 338.7969,633.6719 Q339.4609,633.1641 339.8125,633.0078 Q340.1641,632.8516 340.5938,632.8516 Q341.4141,632.8516 342,633.5156 Q342.625,634.1406 342.625,635.0391 Q342.625,635.8984 341.7656,636.9141 Q340.5156,638.3984 338.5234,639.2188 Q335.9063,640.3516 332.7031,640.3516 Q328.9531,640.3516 325.9453,638.8672 Q323.5234,637.6953 321.8047,635.1563 Q320.125,632.6172 320.125,629.6094 L320.125,626.875 Q320.125,623.75 321.6094,621.0156 Q323.1328,618.2813 325.75,616.8359 Q328.4063,615.3516 331.375,615.3516 Q333.1719,615.3516 334.7344,615.9766 Q336.2969,616.6016 337.625,617.8516 Z " fill="#000000"/><ellipse cx="394.875" cy="625.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="409.875" y="638.877">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="110" x="477.375" y="638.877">JsonUtil</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="231.25" x2="658.75" y1="666.6016" y2="666.6016"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="231.25" x2="658.75" y1="686.6016" y2="686.6016"/><ellipse cx="256.25" cy="714.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="217.5" x="278.75" y="725.1489">Gson getParser ()</text><ellipse cx="256.25" cy="748.6914" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="340" x="278.75" y="759.7388">Gson registerTypeAdapter (</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="302.5" x="338.75" y="794.3286">Class&lt;?&gt; matchingClass,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="185" x="338.75" y="828.9185">Object adapter,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="307.5" x="338.75" y="863.5083">boolean withSubclasses)</text><line style="stroke:#D4AC0D;stroke-width:2.5;stroke-dasharray:1.0,2.0;" x1="231.25" x2="658.75" y1="879.5508" y2="879.5508"/><ellipse cx="256.25" cy="907.0508" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" text-decoration="underline" textLength="305" x="278.75" y="918.0981">String toJson (Object obj)</text><!--MD5=[c34d1faeeea216c406a2d0eb3a604534]
class ContactCardCommonProtocol--><rect codeLine="144" fill="#FEFECE" height="258.3594" id="ContactCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:3.75;" width="597.5" x="1776.25" y="1239.1016"/><ellipse cx="1847.5" cy="1279.1016" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1843.75,1281.6016 L1843.75,1286.6016 L1853.75,1286.6016 L1853.75,1284.1016 L1853.75,1282.8906 L1855.3125,1281.6016 L1856.25,1281.6016 L1857.1875,1281.6016 L1858.75,1282.8906 L1858.75,1284.1016 L1858.75,1291.6016 L1838.75,1291.6016 L1837.5391,1291.6016 L1836.25,1290.0391 L1836.25,1289.1016 L1836.25,1288.1641 L1837.5391,1286.6016 L1838.75,1286.6016 L1838.75,1286.6016 L1838.75,1271.6016 L1838.75,1271.6016 L1837.5391,1271.6016 L1836.25,1270.0391 L1836.25,1269.1016 L1836.25,1268.1641 L1837.5391,1266.6016 L1838.75,1266.6016 L1858.75,1266.6016 L1858.75,1274.1016 L1858.75,1275.3125 L1857.1875,1276.6016 L1856.25,1276.6016 L1855.3125,1276.6016 L1853.75,1275.3125 L1853.75,1274.1016 L1853.75,1271.6016 L1843.75,1271.6016 L1843.75,1276.6016 L1846.25,1276.6016 L1846.25,1275.3906 L1846.25,1275.3906 L1847.8125,1274.1016 L1848.75,1274.1016 L1849.6875,1274.1016 L1851.25,1275.3906 L1851.25,1276.6016 L1851.25,1281.6016 L1851.25,1282.8125 L1849.6875,1284.1016 L1849.6875,1284.1016 L1848.75,1284.1016 L1847.8125,1284.1016 L1846.25,1282.8125 L1846.25,1282.8125 L1846.25,1281.6016 L1843.75,1281.6016 Z " fill="#000000"/><ellipse cx="1902.5" cy="1277.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="415" x="1917.5" y="1291.377">ContactCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1778.75" x2="2371.25" y1="1319.1016" y2="1319.1016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="147.5" x="1791.25" y="1357.6489">ISO_7816_3</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="197.5" x="1791.25" y="1392.2388">ISO_7816_3_TO</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="192.5" x="1791.25" y="1426.8286">ISO_7816_3_T1</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="567.5" x="1791.25" y="1461.4185">INNOVATRON_HIGH_SPEED_PROTOCOL_SAM</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1778.75" x2="2371.25" y1="1477.4609" y2="1477.4609"/><!--MD5=[25bf49c9220c51f3412e028606b93688]
class ContactlessCardCommonProtocol--><rect codeLine="150" fill="#FEFECE" height="327.5391" id="ContactlessCardCommonProtocol" style="stroke:#D4AC0D;stroke-width:3.75;" width="577.5" x="1111.25" y="1204.1016"/><ellipse cx="1148.75" cy="1244.1016" fill="#EB937F" rx="27.5" ry="27.5" style="stroke:#EB93DF;stroke-width:2.5;"/><path d="M1145,1246.6016 L1145,1251.6016 L1155,1251.6016 L1155,1249.1016 L1155,1247.8906 L1156.5625,1246.6016 L1157.5,1246.6016 L1158.4375,1246.6016 L1160,1247.8906 L1160,1249.1016 L1160,1256.6016 L1140,1256.6016 L1138.7891,1256.6016 L1137.5,1255.0391 L1137.5,1254.1016 L1137.5,1253.1641 L1138.7891,1251.6016 L1140,1251.6016 L1140,1251.6016 L1140,1236.6016 L1140,1236.6016 L1138.7891,1236.6016 L1137.5,1235.0391 L1137.5,1234.1016 L1137.5,1233.1641 L1138.7891,1231.6016 L1140,1231.6016 L1160,1231.6016 L1160,1239.1016 L1160,1240.3125 L1158.4375,1241.6016 L1157.5,1241.6016 L1156.5625,1241.6016 L1155,1240.3125 L1155,1239.1016 L1155,1236.6016 L1145,1236.6016 L1145,1241.6016 L1147.5,1241.6016 L1147.5,1240.3906 L1147.5,1240.3906 L1149.0625,1239.1016 L1150,1239.1016 L1150.9375,1239.1016 L1152.5,1240.3906 L1152.5,1241.6016 L1152.5,1246.6016 L1152.5,1247.8125 L1150.9375,1249.1016 L1150.9375,1249.1016 L1150,1249.1016 L1149.0625,1249.1016 L1147.5,1247.8125 L1147.5,1247.8125 L1147.5,1246.6016 L1145,1246.6016 Z " fill="#000000"/><ellipse cx="1196.25" cy="1242.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="470" x="1211.25" y="1256.377">ContactlessCardCommonProtocol</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1113.75" x2="1686.25" y1="1284.1016" y2="1284.1016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="162.5" x="1126.25" y="1322.6489">ISO_14443_4</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="282.5" x="1126.25" y="1357.2388">NFC_A_ISO_14443_3A</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="277.5" x="1126.25" y="1391.8286">NFC_B_ISO_14443_3B</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="235" x="1126.25" y="1426.4185">NFC_F_JIS_6319_4</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="232.5" x="1126.25" y="1461.0083">NFC_V_ISO_15693</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="377.5" x="1126.25" y="1495.5981">INNOVATRON_B_PRIME_CARD</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1113.75" x2="1686.25" y1="1511.6406" y2="1511.6406"/><!--MD5=[5c6c7d52e42032554528404b62c1d271]
class RuntimeException--><rect codeLine="47" fill="#FEFECE" height="120" id="RuntimeException" style="stroke:#D4AC0D;stroke-width:3.75;" width="360" x="845" y="134.1016"/><ellipse cx="882.5" cy="174.1016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M887.5,165.3516 Q888.0078,164.1016 888.5938,163.4766 Q889.1797,162.8516 889.8438,162.8516 Q891.0156,162.8516 891.7578,163.5547 Q892.5,164.2578 892.5,165.8984 L892.5,169.8047 Q892.5,171.4453 891.7969,172.1484 Q891.0938,172.8516 890,172.8516 Q889.0234,172.8516 888.3984,172.4219 Q887.7734,171.9922 887.5,170.8594 Q887.3828,170.0781 886.9531,169.6484 Q886.1719,168.8281 884.7656,168.3594 Q883.3594,167.8516 881.9531,167.8516 Q880.1953,167.8516 878.7109,168.5547 Q877.2656,169.2578 876.1328,170.8203 Q875,172.3828 875,174.5313 L875,176.8359 Q875,179.4141 877.1094,181.1328 Q879.2188,182.8516 882.9688,182.8516 Q885.1953,182.8516 886.7578,182.3438 Q887.6563,182.0703 888.6719,181.1719 Q889.3359,180.6641 889.6875,180.5078 Q890.0391,180.3516 890.4688,180.3516 Q891.2891,180.3516 891.875,181.0156 Q892.5,181.6406 892.5,182.5391 Q892.5,183.3984 891.6406,184.4141 Q890.3906,185.8984 888.3984,186.7188 Q885.7813,187.8516 882.5781,187.8516 Q878.8281,187.8516 875.8203,186.3672 Q873.3984,185.1953 871.6797,182.6563 Q870,180.1172 870,177.1094 L870,174.375 Q870,171.25 871.4844,168.5156 Q873.0078,165.7813 875.625,164.3359 Q878.2813,162.8516 881.25,162.8516 Q883.0469,162.8516 884.6094,163.4766 Q886.1719,164.1016 887.5,165.3516 Z " fill="#000000"/><ellipse cx="930" cy="172.8516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="252.5" x="945" y="186.377">RuntimeException</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="847.5" x2="1202.5" y1="214.1016" y2="214.1016"/><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="847.5" x2="1202.5" y1="234.1016" y2="234.1016"/><!--MD5=[0469281133f5120cce6c8ecdd1573efa]
class JsonSerializer--><rect codeLine="49" fill="#FEFECE" height="223.7695" id="JsonSerializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="527.5" x="1428.75" y="81.6016"/><ellipse cx="1569.375" cy="121.6016" fill="#B4A7E5" rx="27.5" ry="27.5" style="stroke:#B4A7E5;stroke-width:2.5;"/><path d="M1571.875,114.1016 L1571.875,129.1016 L1576.875,129.1016 L1578.0859,129.1016 L1579.375,130.6641 L1579.375,131.6016 L1579.375,132.5391 L1578.0859,134.1016 L1576.875,134.1016 L1561.875,134.1016 L1560.6641,134.1016 L1559.375,132.5391 L1559.375,131.6016 L1559.375,130.6641 L1560.6641,129.1016 L1561.875,129.1016 L1566.875,129.1016 L1566.875,114.1016 L1561.875,114.1016 L1560.6641,114.1016 L1559.375,112.5391 L1559.375,111.6016 L1559.375,110.6641 L1560.6641,109.1016 L1561.875,109.1016 L1576.875,109.1016 L1578.0859,109.1016 L1579.375,110.6641 L1579.375,111.6016 L1579.375,112.5391 L1578.0859,114.1016 L1576.875,114.1016 L1571.875,114.1016 Z " fill="#000000"/><ellipse cx="1633.125" cy="120.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="197.5" x="1648.125" y="133.877">JsonSerializer</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="1431.25" x2="1953.75" y1="161.6016" y2="161.6016"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="1431.25" x2="1953.75" y1="181.6016" y2="181.6016"/><ellipse cx="1456.25" cy="209.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="275" x="1478.75" y="220.1489">JsonElement serialize (</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="342.5" x="1538.75" y="254.7388">byte[] data, Type typeOfSrc,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="402.5" x="1538.75" y="289.3286">JsonSerializationContext context)</text><!--MD5=[c04c9295e01f428445c71975bdd8b5e9]
class JsonDeserializer--><rect codeLine="55" fill="#FEFECE" height="223.7695" id="JsonDeserializer" style="stroke:#D4AC0D;stroke-width:3.75;" width="785" x="2197.5" y="81.6016"/><ellipse cx="2435.625" cy="121.6016" fill="#B4A7E5" rx="27.5" ry="27.5" style="stroke:#B4A7E5;stroke-width:2.5;"/><path d="M2438.125,114.1016 L2438.125,129.1016 L2443.125,129.1016 L2444.3359,129.1016 L2445.625,130.6641 L2445.625,131.6016 L2445.625,132.5391 L2444.3359,134.1016 L2443.125,134.1016 L2428.125,134.1016 L2426.9141,134.1016 L2425.625,132.5391 L2425.625,131.6016 L2425.625,130.6641 L2426.9141,129.1016 L2428.125,129.1016 L2433.125,129.1016 L2433.125,114.1016 L2428.125,114.1016 L2426.9141,114.1016 L2425.625,112.5391 L2425.625,111.6016 L2425.625,110.6641 L2426.9141,109.1016 L2428.125,109.1016 L2443.125,109.1016 L2444.3359,109.1016 L2445.625,110.6641 L2445.625,111.6016 L2445.625,112.5391 L2444.3359,114.1016 L2443.125,114.1016 L2438.125,114.1016 Z " fill="#000000"/><ellipse cx="2499.375" cy="120.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="232.5" x="2514.375" y="133.877">JsonDeserializer</text><rect fill="#FFFFFF" height="42.7344" style="stroke:#000000;stroke-width:2.5;stroke-dasharray:2.0,2.0;" width="22.5" x="2967.5" y="74.1016"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="17.5" x="2970" y="107.7441">T</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="2200" x2="2980" y1="161.6016" y2="161.6016"/><line style="stroke:#D4AC0D;stroke-width:2.5;" x1="2200" x2="2980" y1="181.6016" y2="181.6016"/><ellipse cx="2225" cy="209.1016" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="170" x="2247.5" y="220.1489">T deserialize (</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="442.5" x="2307.5" y="254.7388">JsonElement jsonElement, Type type,</text><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="660" x="2307.5" y="289.3286">JsonDeserializationContext jsonDeserializationContext)</text><!--MD5=[a6bd5ab15de37637d634d72ce80b38fb]
class Gson--><rect codeLine="61" fill="#FEFECE" height="154.5898" id="Gson" style="stroke:#D4AC0D;stroke-width:3.75;" width="247.5" x="321.25" y="116.6016"/><ellipse cx="358.75" cy="156.6016" fill="#ADD1B2" rx="27.5" ry="27.5" style="stroke:#ADD1B2;stroke-width:2.5;"/><path d="M363.75,147.8516 Q364.2578,146.6016 364.8438,145.9766 Q365.4297,145.3516 366.0938,145.3516 Q367.2656,145.3516 368.0078,146.0547 Q368.75,146.7578 368.75,148.3984 L368.75,152.3047 Q368.75,153.9453 368.0469,154.6484 Q367.3438,155.3516 366.25,155.3516 Q365.2734,155.3516 364.6484,154.9219 Q364.0234,154.4922 363.75,153.3594 Q363.6328,152.5781 363.2031,152.1484 Q362.4219,151.3281 361.0156,150.8594 Q359.6094,150.3516 358.2031,150.3516 Q356.4453,150.3516 354.9609,151.0547 Q353.5156,151.7578 352.3828,153.3203 Q351.25,154.8828 351.25,157.0313 L351.25,159.3359 Q351.25,161.9141 353.3594,163.6328 Q355.4688,165.3516 359.2188,165.3516 Q361.4453,165.3516 363.0078,164.8438 Q363.9063,164.5703 364.9219,163.6719 Q365.5859,163.1641 365.9375,163.0078 Q366.2891,162.8516 366.7188,162.8516 Q367.5391,162.8516 368.125,163.5156 Q368.75,164.1406 368.75,165.0391 Q368.75,165.8984 367.8906,166.9141 Q366.6406,168.3984 364.6484,169.2188 Q362.0313,170.3516 358.8281,170.3516 Q355.0781,170.3516 352.0703,168.8672 Q349.6484,167.6953 347.9297,165.1563 Q346.25,162.6172 346.25,159.6094 L346.25,156.875 Q346.25,153.75 347.7344,151.0156 Q349.2578,148.2813 351.875,146.8359 Q354.5313,145.3516 357.5,145.3516 Q359.2969,145.3516 360.8594,145.9766 Q362.4219,146.6016 363.75,147.8516 Z " fill="#000000"/><ellipse cx="406.25" cy="155.3516" fill="#84BE84" rx="7.5" ry="7.5" style="stroke:#038048;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="60" x="421.25" y="168.877">final</text><text fill="#000000" font-family="sans-serif" font-size="30" font-style="italic" lengthAdjust="spacing" textLength="72.5" x="488.75" y="168.877">Gson</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="323.75" x2="566.25" y1="196.6016" y2="196.6016"/><text fill="#000000" font-family="sans-serif" font-size="27.5" lengthAdjust="spacing" textLength="22.5" x="336.25" y="235.1489">...</text><line style="stroke:#D4AC0D;stroke-width:3.75;" x1="323.75" x2="566.25" y1="251.1914" y2="251.1914"/><!--MD5=[6bb4d5d05428fd13caba132cde5d5580]
reverse link JsonDeserializer to BodyErrorJsonDeserializer--><path d="M2612.1,356.5766 C2626.85,463.3791 2645.55,598.9766 2657.025,682.0291 " fill="none" id="JsonDeserializer-backto-BodyErrorJsonDeserializer" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2594.725,358.7416,2605.225,306.8166,2629.4,353.9541,2594.725,358.7416" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[de4a0b249dfa69974c5a70d183038923]
reverse link JsonSerializer to ByteArrayJsonAdapter--><path d="M1896.195,344.4191 C1998.3675,464.3941 2066.265,599.8541 2103.43,682.6891 " fill="none" id="JsonSerializer-backto-ByteArrayJsonAdapter" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1882.935,355.8466,1862.5975,306.9291,1909,332.4866,1882.935,355.8466" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[03ed7dd06522293754992153db21051a]
reverse link JsonDeserializer to ByteArrayJsonAdapter--><path d="M2371.3425,344.1066 C2268.045,462.6816 2201.545,598.6991 2165.4675,682.0841 " fill="none" id="JsonDeserializer-backto-ByteArrayJsonAdapter" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="2358.645,332.0641,2405.385,307.1291,2384.395,355.7691,2358.645,332.0641" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[566f86fa9a54682a3d2b3ca2f5fe126b]
reverse link JsonSerializer to ThrowableJsonSerializer--><path d="M1670.41,356.5766 C1655.6625,463.3791 1636.9375,598.9766 1625.47,682.0291 " fill="none" id="JsonSerializer-backto-ThrowableJsonSerializer" style="stroke:#A80036;stroke-width:2.5;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1653.105,353.9541,1677.28,306.8166,1687.7775,358.7416,1653.105,353.9541" style="stroke:#A80036;stroke-width:2.5;"/><!--MD5=[a1bb761e63e90bbd81be59ff15302cff]
reverse link Tag to TagType--><path codeLine="163" d="M1618.47,2325.4266 C1619.2075,2365.0616 1621.115,2403.3091 1624.195,2435.7491 " fill="none" id="Tag-backto-TagType" style="stroke:#A80036;stroke-width:2.5;"/><ellipse cx="1618.3059" cy="2307.1432" fill="#FFFFFF" rx="20" ry="20" style="stroke:#A80036;stroke-width:2.5;"/><line style="stroke:#A80036;stroke-width:2.5;" x1="1618.4869" x2="1618.125" y1="2327.1424" y2="2287.1441"/><line style="stroke:#A80036;stroke-width:2.5;" x1="1598.3068" x2="1638.3051" y1="2307.3242" y2="2306.9623"/><!--MD5=[a1bb761e63e90bbd81be59ff15302cff]
reverse link Tag to TagType--><path codeLine="164" d="M1683.4725,2320.5166 C1682.77,2361.8966 1680.7175,2401.9716 1677.3225,2435.7491 " fill="none" id="Tag-backto-TagType-1" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="1683.75,2287.1441,1673.6251,2302.06,1683.4995,2317.143,1693.6244,2302.2271,1683.75,2287.1441" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="1663.0146" y="2409.7207">1</text><!--MD5=[3ff11dd639e9d76a654a06e76697482f]
link RuntimeException to BodyError--><path codeLine="166" d="M1025,254.5516 C1025,336.3791 1025,488.7016 1025,604.4216 " fill="none" id="RuntimeException-to-BodyError" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="1025,637.5191,1035,622.5191,1025,607.5191,1015,622.5191,1025,637.5191" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="1005.3672" y="308.0062">1</text><!--MD5=[9e2af7dddda1d5fe4d1181586e3e92c0]
link Gson to JsonUtil--><path codeLine="168" d="M445,272.3016 C445,344.0716 445,455.1741 445,552.9991 " fill="none" id="Gson-to-JsonUtil" style="stroke:#3498DB;stroke-width:2.5;"/><polygon fill="#3498DB" points="445,585.5891,455,570.5891,445,555.5891,435,570.5891,445,585.5891" style="stroke:#3498DB;stroke-width:2.5;"/><text fill="#000000" font-family="sans-serif" font-size="32.5" lengthAdjust="spacing" textLength="17.5" x="425.832" y="324.8816">1</text><!--MD5=[9ffde7144b39a894305f13b60264b182]
link json to protocol--><!--MD5=[3588befeacdf3116e0fd853ffedaac46]
link json to ByteArrayUtil--><!--MD5=[77af3af9bd033e189bbbaaa818513ffc]
link ByteArrayUtil to Assert--><!--MD5=[dc493a322bbc1c626ba99be9e371bb14]
link protocol to bertlv--><!--MD5=[9a8a3e1991ca8b753eed5517a8ecafb8]
@startuml
title
    Keyple 2.0 - keyple-java-utils - 2.0.0 (11/03/2021)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

+class RuntimeException {
}
+interface JsonSerializer {
    - -
    +JsonElement serialize (
        \tbyte[] data, Type typeOfSrc,
        \tJsonSerializationContext context)
}
+interface JsonDeserializer<T> {
    - -
    +T deserialize (
        \tJsonElement jsonElement, Type type,
        \tJsonDeserializationContext jsonDeserializationContext)
}
+class "**final** Gson" as Gson {
    ...
}
package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        - -
        +{static} Assert getInstance ()
        ..
        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (List<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    package bertlv {
        +class TLV {
            - -
            +TLV (byte[] binary)
            ..
            +boolean parse (Tag tag, int offset)
            +int getPosition ()
            +byte[] getValue ()
        }
        +class Tag {
            +{static} **final** byte UNIVERSAL
            +{static} **final** byte APPLICATION
            +{static} **final** byte CONTEXT
            +{static} **final** byte PRIVATE
            - -
            +Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)
            +Tag (byte[] binary, int offset)
            ..
            +int getTagNumber ()
            +byte getTagClass ()
            +TagType getTagType ()
            +int getTagSize ()
        }
        +enum TagType {
            PRIMITIVE
            CONSTRUCTED
        }
    }
    package json {
        +class BodyError {
            - -
            +BodyError (RuntimeException exception)
            ..
            +String getCode ()
            +RuntimeException getException ()
        }
        +class BodyErrorJsonDeserializer implements JsonDeserializer {
            +BodyErrorJsonDeserializer ()
        }
        +class ByteArrayJsonAdapter implements JsonSerializer, JsonDeserializer {
            +ByteArrayJsonAdapter ()
        }
        +class ThrowableJsonSerializer implements JsonSerializer {
            +ThrowableJsonSerializer ()
        }
        +class "**final** JsonUtil" as JsonUtil {
            - -
            +{static} Gson getParser ()
            +{static} Gson registerTypeAdapter (
                \tClass<?> matchingClass,
                \tObject adapter,
                \tboolean withSubclasses)
            ..
            +{static} String toJson (Object obj)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}

' Associations

Tag +- - TagType
Tag *- - "1" TagType #C_LINK

BodyError *-up- "1" RuntimeException #C_LINK

JsonUtil *-up- "1" Gson #C_LINK

' == LAYOUT ==

json -[hidden]- protocol
json -[hidden]- ByteArrayUtil
ByteArrayUtil -[hidden]- Assert

protocol -[hidden]- bertlv

' == STYLE ==

package util #C_GREY1 {}
package bertlv #C_GREY2 {}
package json #C_GREY2 {}
package protocol #C_GREY2 {}
'class PoolLocalServiceServerUtils <<blue>>

@enduml

@startuml
title
    Keyple 2.0 - keyple-java-utils - 2.0.0 (11/03/2021)
end title



skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype


+class RuntimeException {
}
+interface JsonSerializer {
    - -
    +JsonElement serialize (
        \tbyte[] data, Type typeOfSrc,
        \tJsonSerializationContext context)
}
+interface JsonDeserializer<T> {
    - -
    +T deserialize (
        \tJsonElement jsonElement, Type type,
        \tJsonDeserializationContext jsonDeserializationContext)
}
+class "**final** Gson" as Gson {
    ...
}
package "org.eclipse.keyple.core.util" as util {
    +class "**final** Assert" as Assert {
        - -
        +{static} Assert getInstance ()
        ..
        +Assert notNull (Object obj, String name)
        +Assert notEmpty (String obj, String name)
        +Assert notEmpty (List<? extends Object> obj, String name)
        +Assert notEmpty (byte[] obj, String name)
        +Assert isTrue (Boolean condition, String name)
        +Assert greaterOrEqual (Integer number, int minValue, String name)
        +Assert isEqual (Integer number, int value, String name)
        +Assert isInRange (Integer number, int minValue, int maxValue, String name)
    }
    +class "**final** ByteArrayUtil" as ByteArrayUtil {
        +{static} byte[] fromHex (String hex)
        +{static} String toHex (byte[] byteArray)
        +{static} int twoBytesToInt (byte[] bytes, int offset)
        +{static} int twoBytesSignedToInt (byte[] bytes, int offset)
        +{static} int threeBytesToInt (byte[] bytes, int offset)
        +{static} int threeBytesSignedToInt (byte[] bytes, int offset)
        +{static} int fourBytesToInt (byte[] bytes, int offset)
    }
    package bertlv {
        +class TLV {
            - -
            +TLV (byte[] binary)
            ..
            +boolean parse (Tag tag, int offset)
            +int getPosition ()
            +byte[] getValue ()
        }
        +class Tag {
            +{static} **final** byte UNIVERSAL
            +{static} **final** byte APPLICATION
            +{static} **final** byte CONTEXT
            +{static} **final** byte PRIVATE
            - -
            +Tag (int tagNumber, byte tagClass, TagType tagType, int tagSize)
            +Tag (byte[] binary, int offset)
            ..
            +int getTagNumber ()
            +byte getTagClass ()
            +TagType getTagType ()
            +int getTagSize ()
        }
        +enum TagType {
            PRIMITIVE
            CONSTRUCTED
        }
    }
    package json {
        +class BodyError {
            - -
            +BodyError (RuntimeException exception)
            ..
            +String getCode ()
            +RuntimeException getException ()
        }
        +class BodyErrorJsonDeserializer implements JsonDeserializer {
            +BodyErrorJsonDeserializer ()
        }
        +class ByteArrayJsonAdapter implements JsonSerializer, JsonDeserializer {
            +ByteArrayJsonAdapter ()
        }
        +class ThrowableJsonSerializer implements JsonSerializer {
            +ThrowableJsonSerializer ()
        }
        +class "**final** JsonUtil" as JsonUtil {
            - -
            +{static} Gson getParser ()
            +{static} Gson registerTypeAdapter (
                \tClass<?> matchingClass,
                \tObject adapter,
                \tboolean withSubclasses)
            ..
            +{static} String toJson (Object obj)
        }
    }
    package protocol {
        +enum ContactCardCommonProtocol {
            ISO_7816_3
            ISO_7816_3_TO
            ISO_7816_3_T1
            INNOVATRON_HIGH_SPEED_PROTOCOL_SAM
        }
        +enum ContactlessCardCommonProtocol {
            ISO_14443_4
            NFC_A_ISO_14443_3A
            NFC_B_ISO_14443_3B
            NFC_F_JIS_6319_4
            NFC_V_ISO_15693
            INNOVATRON_B_PRIME_CARD
        }
    }
}


Tag +- - TagType
Tag *- - "1" TagType #3498DB

BodyError *-up- "1" RuntimeException #3498DB

JsonUtil *-up- "1" Gson #3498DB


json -[hidden]- protocol
json -[hidden]- ByteArrayUtil
ByteArrayUtil -[hidden]- Assert

protocol -[hidden]- bertlv


package util #F8F9F9 {}
package bertlv #F2F3F4 {}
package json #F2F3F4 {}
package protocol #F2F3F4 {}

@enduml

PlantUML version 1.2021.01(Tue Feb 02 08:55:08 CET 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: fr
Country: FR
--></g></svg>
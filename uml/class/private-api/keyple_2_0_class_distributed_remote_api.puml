@startuml
title
    Keyple 2.0 - keyple-java-distributed-remote-api - 2.0 (11/03/2021)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

skinparam Shadowing false
skinparam ClassFontStyle italic
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

package "org.eclipse.keyple.core.distributed.remote" as api {
    +class "**final** DistributedRemoteApiProperties" as ApiProperties {
        +{static} **final** String VERSION
    }
    +interface RemotePluginManager {
        --
        +void onReaderEvent (String jsonData)
    }
    +interface ObservableRemotePluginManager extends RemotePluginManager {
        --
        +void registerMasterReader (RemoteReaderSpi masterReaderSpi)
        +void registerSlaveReader (RemoteReaderSpi slaveReaderSpi,
            \tString masterReaderName,
            \tString readerEventJsonData)
        +boolean unregisterReader (readerName)
        ..
        +void onPluginEvent (String jsonData)
    }
    package spi {
        +interface RemotePluginFactorySpi {
            +String getDistributedRemoteApiVersion ()
            +String getCommonsApiVersion ()
            +String getRemotePluginName ()
            +RemotePluginSpi getRemotePlugin ()
            +boolean isPoolPlugin ()
        }
        +interface RemotePluginSpi {
            --
            +void setManager (RemotePluginManager manager)
            +String getName ()
            +String executeRemotely (String jsonData)
            +RemoteReaderSpi createRemoteReader (
                \tString localReaderName,
                \tboolean isObservable)
            ..
            +boolean isObservable ()
            +void startPluginsObservation ()
            +void stopPluginsObservation ()
        }
        +interface RemoteReaderSpi {
            --
            +String getName ()
            +String executeRemotely (String jsonData)
            ..
            +boolean isObservable ()
            +void startReaderObservation ()
            +void stopReaderObservation ()
        }
    }
}

' Associations

RemotePluginFactorySpi .left.> ApiProperties #C_USE : provide\nAPI version <
RemotePluginFactorySpi ..> RemotePluginSpi #C_USE : provide >

RemotePluginSpi ..> RemoteReaderSpi #C_USE : provide >
RemotePluginSpi .left.> RemotePluginManager #C_USE : use >

' == LAYOUT ==

'ObservableRemotePluginSpi -[hidden]- RemoteReaderSpi

' == STYLE ==

package api #C_GREY1 {}
package spi #C_GREY2 {}

@enduml